[{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/826","url":"","title":"Run From the Terminal","command":"run-from-the-terminal","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/826\">\n<meta id=\"D_kwDOEu7MBc4AQA9v\">\n<meta sectionIndex=\"5\">\n<meta title=\"Run From the Terminal\">\n<meta section=\"Advanced\">\n<meta i=\"1\">    \n<meta path=\"docs/run-from-the-terminal\">\n\nIn progress...","extension":".md","dir":"docs","file":"run-from-the-terminal","description":"","tag":"","section":"Advanced","i":"1","sectionIndex":"5","createdAt":"2022-07-06T17:51:54Z"},{"name":"Get Example","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/825","url":"https://gist.githubusercontent.com/johnlindquist/cdef2447a1b49ad163a9c696369c930d/raw/65407970a7dd1af406b0cbee94e876e84822e16e/get-example.js","title":"Get, Post, Put, Delete Requests","command":"get-post-put-delete-requests","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/825\">\n<meta id=\"D_kwDOEu7MBc4AQA9u\">\n<meta sectionIndex=\"3\">\n<meta title=\"Get, Post, Put, Delete Requests\">\n<meta section=\"Files and Data\">\n<meta i=\"3\">    \n<meta path=\"docs/get-post-put-delete-requests\">\n\nThe `get`, `post`, `put`, and `delete` methods use the [axios](https://www.npmjs.com/package/axios) API\n\n## Make a Get Request\n\n```js\n// Name: Get Example\n\nimport \"@johnlindquist/kit\"\n\nlet response = await get(\n  \"https://scriptkit.com/api/get-example\"\n)\n\nawait div(md(response.data.message))\n```\n\n[Open get-example in Script Kit](https://scriptkit.com/api/new?name=get-example&url=https://gist.githubusercontent.com/johnlindquist/cdef2447a1b49ad163a9c696369c930d/raw/65407970a7dd1af406b0cbee94e876e84822e16e/get-example.js\")\n\n## Make a Post Request\n\n```js\n// Name: Post Example\n\nimport \"@johnlindquist/kit\"\n\nlet response = await post(\n  \"https://scriptkit.com/api/post-example\",\n  {\n    name: await arg(\"Enter your name\"),\n  }\n)\n\nawait div(md(response.data.message))\n```\n\n[Open post-example in Script Kit](https://scriptkit.com/api/new?name=post-example&url=https://gist.githubusercontent.com/johnlindquist/8bac8a4e303fe21c93b93787c828419f/raw/fcb26d4eafa0fa36fcb88b02716e4503e130b375/post-example.js\")\n","extension":".md","dir":"docs","file":"get-post-put-delete-requests","description":"","tag":"","section":"Files and Data","i":"3","sectionIndex":"3","createdAt":"2022-07-06T17:51:54Z"},{"menu":"Database Read/Write Example","description":"","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/823","url":"https://gist.githubusercontent.com/johnlindquist/a7cda43e196f6b6e38e4c66cba8cdb74/raw/8d93dc14970bac042763cb86b30456b32ba5fab7/db-store.js","title":"Simple Storage","command":"simple-storage","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/823\">\n<meta id=\"D_kwDOEu7MBc4AQA6S\">\n<meta sectionIndex=\"3\">\n<meta title=\"Simple Storage\">\n<meta section=\"Files and Data\">\n<meta i=\"4\">    \n<meta path=\"docs/simple-storage\">\n\n## Read and Write Using the `db` Helper\n\nThe `db` helpers reads/writes to json files in the `~/.kenv/db` directory. It's meant as a simple wrapper around common json operations.\n\n```js\n// Menu: Database Read/Write Example\n// Description: Add/remove items from a list of fruit\n\nlet fruitDb = await db([\"apple\", \"banana\", \"orange\"])\n\n// This will keep prompting until you hit Escape\nwhile (true) {\n  let fruitToAdd = await arg(\n    {\n      placeholder: \"Add a fruit\",\n      //allows to submit input not in the list\n      strict: false,\n    },\n    fruitDb.items\n  )\n\n  fruitDb.items.push(fruitToAdd)\n  await fruitDb.write()\n\n  let fruitToDelete = await arg(\n    \"Delete a fruit\",\n    fruitDb.items\n  )\n\n  fruitDb.items = fruitDb.items.filter(\n    fruit => fruit !== fruitToDelete\n  )\n\n  await fruitDb.write()\n}\n```\n\n[Open db-store in Script Kit](https://scriptkit.com/api/new?name=db-store&url=https://gist.githubusercontent.com/johnlindquist/a7cda43e196f6b6e38e4c66cba8cdb74/raw/8d93dc14970bac042763cb86b30456b32ba5fab7/db-store.js\")\n","extension":".md","dir":"docs","file":"simple-storage","tag":"","section":"Files and Data","i":"4","sectionIndex":"3","createdAt":"2022-07-06T16:05:47Z"},{"name":"Play with Data in Chrome DevTools","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/822","url":"https://gist.githubusercontent.com/johnlindquist/3202a35d448efd09c37c4b49b7f7c95a/raw/187da03b4dae7c1ebe6fb79bd1ea47f7a492cb38/play-with-data-in-chrome-devtools.js","title":"DevTools","command":"devtools","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/822\">\n<meta id=\"D_kwDOEu7MBc4AP_uq\">\n<meta sectionIndex=\"1\">\n<meta title=\"DevTools\">\n<meta section=\"Essentials\">\n<meta i=\"6\">    \n<meta path=\"docs/devtools\">\n\n## Play with Data in Chrome DevTools\n\n```js\n// Name: Play with Data in Chrome DevTools\n\nimport \"@johnlindquist/kit\"\n\n// Will open a standalone Chrome DevTools window\n// The object passed in will be displayed\n// You can access the object using `x`, e.g., `x.message` will be `Hello world`\ndev({\n  message: \"Hello world\",\n})\n```\n\n[Open play-with-data-in-chrome-devtools in Script Kit](https://scriptkit.com/api/new?name=play-with-data-in-chrome-devtools&url=https://gist.githubusercontent.com/johnlindquist/3202a35d448efd09c37c4b49b7f7c95a/raw/187da03b4dae7c1ebe6fb79bd1ea47f7a492cb38/play-with-data-in-chrome-devtools.js\")\n","extension":".md","dir":"docs","file":"devtools","description":"","tag":"","section":"Essentials","i":"6","sectionIndex":"1","createdAt":"2022-07-04T20:06:34Z"},{"name":"Run Commands in the Terminal","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/821","url":"https://gist.githubusercontent.com/johnlindquist/e1fbd791d67d772c047f2afcab087cff/raw/37f5ab92f8caafbf437d4f234818ebae67fb7fba/run-commands-in-the-terminal.js","title":"Built-in Terminal","command":"built-in-terminal","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/821\">\n<meta id=\"D_kwDOEu7MBc4AP_up\">\n<meta sectionIndex=\"1\">\n<meta title=\"Built-in Terminal\">\n<meta section=\"Essentials\">\n<meta i=\"4\">    \n<meta path=\"docs/built-in-terminal\">\n\n## Use the Built-in Terminal\n\n```js\n// Name: Run Commands in the Terminal\n\nimport \"@johnlindquist/kit\"\n\nawait term({\n  //defaults to home dir\n  cwd: `~/.kenv`,\n  command: `ls`,\n  // The footer is optional. All terms continue with the same shortcuts\n  footer: `ctrl+c or cmd+enter to continue`,\n})\n```\n\n[Open run-commands-in-the-terminal in Script Kit](https://scriptkit.com/api/new?name=run-commands-in-the-terminal&url=https://gist.githubusercontent.com/johnlindquist/e1fbd791d67d772c047f2afcab087cff/raw/37f5ab92f8caafbf437d4f234818ebae67fb7fba/run-commands-in-the-terminal.js\")\n\n> The shell defaults to `zsh`. You can change your shell by setting the `KIT_SHELL` environment variable in the ~/kenv/.env, but most of the testing has been done with `zsh`.\n","extension":".md","dir":"docs","file":"built-in-terminal","description":"","tag":"","section":"Essentials","i":"4","sectionIndex":"1","createdAt":"2022-07-04T20:06:33Z"},{"name":"Input Text","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/819","url":"https://gist.githubusercontent.com/johnlindquist/af8883b05ae34055fff79ec8556e007d/raw/bb5d116f831d3124081867e83710a07e39bf41cd/input-text.js","title":"Text Input","command":"text-input","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/819\">\n<meta id=\"D_kwDOEu7MBc4AP-jk\">\n<meta sectionIndex=\"1\">\n<meta title=\"Text Input\">\n<meta section=\"Essentials\">\n<meta i=\"1\">    \n<meta path=\"docs/receive-text-input\">\n\n## Input Text with `await arg()`\n\nThe simplest form of input you can accept from a user is an `arg()`\n\n```js\n// Name: Input Text\n\nimport \"@johnlindquist/kit\"\n\nlet name = await arg(\"Enter your name\")\n\nawait div(md(`Hello, ${name}`))\n```\n\n[Open input-text in Script Kit](https://scriptkit.com/api/new?name=input-text&url=https://gist.githubusercontent.com/johnlindquist/af8883b05ae34055fff79ec8556e007d/raw/bb5d116f831d3124081867e83710a07e39bf41cd/input-text.js\")\n\n## Select From a List of Strings\n\n```js\n// Name: Select From a List\n\nimport \"@johnlindquist/kit\"\n\nlet fruit = await arg(\"Pick a fruit\", [\n  \"Apple\",\n  \"Banana\",\n  \"Cherry\",\n])\n\nawait div(md(`You selected ${fruit}`))\n```\n\n[Open select-from-a-list in Script Kit](https://scriptkit.com/api/new?name=select-from-a-list&url=https://gist.githubusercontent.com/johnlindquist/a53ebfe6372eb3ad3aade06e2d11ef51/raw/b1939b6cceb669f2bbaeec5e6b3af2549994e214/select-from-a-list.js\")\n\n## Select From a List of Objects\n\n```js\n// Name: Select From a List of Objects\n\nimport \"@johnlindquist/kit\"\n\nlet { size, weight } = await arg(\"Select a Fruit\", [\n  {\n    name: \"Apple\",\n    description: \"A shiny red fruit\",\n    // add any properties to \"value\"\n    value: {\n      size: \"small\",\n      weight: 1,\n    },\n  },\n  {\n    name: \"Banana\",\n    description: \"A long yellow fruit\",\n    value: {\n      size: \"medium\",\n      weight: 2,\n    },\n  },\n])\n\nawait div(\n  md(\n    `You selected a fruit with size: ${size} and weight: ${weight}`\n  )\n)\n```\n\n[Open select-from-a-list-of-objects in Script Kit](https://scriptkit.com/api/new?name=select-from-a-list-of-objects&url=https://gist.githubusercontent.com/johnlindquist/1643c1f34cc146e19c01b5144c542b6f/raw/ac3a2bc71c27d1ee58cf83394c8755a005d2a567/select-from-a-list-of-objects.js\")\n\n## Display a Preview When Focusing a Choice\n\n```js\n// Name: Display a Preview When Focusing a Choice\n\nimport \"@johnlindquist/kit\"\n\nlet heights = [320, 480, 640]\nlet choices = heights.map(h => {\n  return {\n    name: `Kitten height: ${h}`,\n    preview: () =>\n      `<img class=\"w-full\" src=\"http://placekitten.com/640/${h}\"`,\n    value: h,\n  }\n})\n\nlet height = await arg(\"Select a Kitten\", choices)\n\nawait div(md(`You selected ${height}`))\n```\n\n[Open display-a-preview-when-focusing-a-choice in Script Kit](https://scriptkit.com/api/new?name=display-a-preview-when-focusing-a-choice&url=https://gist.githubusercontent.com/johnlindquist/13299ad794a03d3443a5afd8e11ca76a/raw/ac84e21e88c8ac5e8ffdd729a8a5a04a281df796/display-a-preview-when-focusing-a-choice.js\")\n","extension":".md","dir":"docs","file":"receive-text-input","description":"","tag":"","section":"Essentials","i":"1","sectionIndex":"1","createdAt":"2022-07-02T01:52:45Z"},{"name":"Display HTML","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/818","url":"https://gist.githubusercontent.com/johnlindquist/ba1d6754436d898f8cebe8558647e720/raw/468e99941e8c63eff51ba24b6cb7c86bb9dd70fe/display-html.js","title":"Display HTML and Markdown","command":"display-html-and-markdown","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/818\">\n<meta id=\"D_kwDOEu7MBc4AP-jj\">\n<meta sectionIndex=\"1\">\n<meta title=\"Display HTML and Markdown\">\n<meta section=\"Essentials\">\n<meta i=\"0\">    \n<meta path=\"docs/display-html-and-markdown\">\n\n## Display HTML\n\nUse `await div('')` to display HTML.\n\n```js\n// Name: Display HTML\n\nimport \"@johnlindquist/kit\"\n\nawait div(`<h1>Hello World</h1>`)\n```\n\n[Open display-html in Script Kit](https://scriptkit.com/api/new?name=display-html&url=https://gist.githubusercontent.com/johnlindquist/ba1d6754436d898f8cebe8558647e720/raw/468e99941e8c63eff51ba24b6cb7c86bb9dd70fe/display-html.js\")\n\n## Display HTML with CSS\n\nScript Kit bundles [Tailwind CSS](https://tailwindcss.com/).\n\n```js\n// Name: Display HTML with CSS\n\nimport \"@johnlindquist/kit\"\n\nawait div(\n  `<h1 class=\"p-10 text-4xl text-center\">Hello World</h1>`\n)\n```\n\n[Open display-html-with-css in Script Kit](https://scriptkit.com/api/new?name=display-html-with-css&url=https://gist.githubusercontent.com/johnlindquist/02b7a43e5dd49f2e1508d8c110d12371/raw/1d80190f0cfce860078cec799fd614bd6f49a474/display-html-with-css.js\")\n\n## Display Markdown\n\nThe `md()` function will convert Markdown to HTML into HTML that you can pass into div. It will also add the default Tailwind styles so you won't have to think about formatting.\n\n```js\n// Name: Display Markdown\n\nimport \"@johnlindquist/kit\"\n\nlet html = md(`# Hello World`)\n\nawait div(html)\n```\n\n[Open display-markdown in Script Kit](https://scriptkit.com/api/new?name=display-markdown&url=https://gist.githubusercontent.com/johnlindquist/84779dbf8e39212c672b16ee72c68ccf/raw/7e985c988fa6aa878e4c0040dac6b87b8cfb173c/display-markdown.js\")\n","extension":".md","dir":"docs","file":"display-html-and-markdown","description":"","tag":"","section":"Essentials","i":"0","sectionIndex":"1","createdAt":"2022-07-02T01:52:44Z"},{"name":"Speak File","watch":"~/speak.txt","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/814","url":"https://gist.githubusercontent.com/johnlindquist/ec65920283c6ef66429a2331cdc81539/raw/98584e1ee1cb6b5f4f235a6873bdfcb709dfb953/speak-file.js","title":"Watch for File Changes","command":"watch-for-file-changes","content":"<meta sectionIndex=\"2\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/814\">\n<meta id=\"D_kwDOEu7MBc4AP9Tk\">\n<meta title=\"Watch for File Changes\">\n<meta section=\"Script Metadata\">\n<meta i=\"2\">    \n<meta path=\"docs/watch-for-file-changes\">\n\n## Watch a Single File\n\nThe `// Watch` metadata enables you to watch for changes to a file on your system.\n\n```js\n// Name: Speak File\n// Watch: ~/speak.txt\n\nimport \"@johnlindquist/kit\"\n\nlet speakPath = home(\"speak.txt\")\n\ntry {\n  let content = await readFile(speakPath, \"utf-8\")\n  if (content.length < 60) {\n    // We don't want `say` to run too long 😅\n    say(content)\n  }\n} catch (error) {\n  log(error)\n}\n```\n\n[Open speak-file in Script Kit](https://scriptkit.com/api/new?name=speak-file&url=https://gist.githubusercontent.com/johnlindquist/ec65920283c6ef66429a2331cdc81539/raw/98584e1ee1cb6b5f4f235a6873bdfcb709dfb953/speak-file.js\")\n\n## Watch a Directory\n\nThe `// Watch` metadata uses [Chokidar](https://www.npmjs.com/package/chokidar) under the hood, so it supports the same glob patterns.\n\n```js\n// Name: Download Log\n// Watch: ~/Downloads/*\n\nimport \"@johnlindquist/kit\"\n\n// These are optional and automatically set by the watcher\nlet filePath = await arg()\nlet event = await arg()\n\nif (event === \"add\") {\n  await appendFile(home(\"download.log\"), filePath + \"\\n\")\n}\n```\n\n[Open download-log in Script Kit](https://scriptkit.com/api/new?name=download-log&url=https://gist.githubusercontent.com/johnlindquist/395ced3283e44c8ed2fea885104a1346/raw/e9b03ddfb0ae969d2b82e45c41ac8680ea2e686b/download-log.js\")\n","extension":".md","dir":"docs","file":"watch-for-file-changes","description":"","tag":"","section":"Script Metadata","i":"2","sectionIndex":"2","createdAt":"2022-06-30T02:17:17Z"},{"name":"Express Example","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/813","url":"https://gist.githubusercontent.com/johnlindquist/52c9ab749f8483a15ccbd28631db2df1/raw/e8bc1e1dec05fd17e36cafbf21ada409b91a6fa9/express-example.js","title":"npm Packages","command":"npm-packages","content":"<meta sectionIndex=\"1\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/813\">\n<meta id=\"D_kwDOEu7MBc4AP9Tj\">\n<meta title=\"npm Packages\">\n<meta section=\"Essentials\">\n<meta i=\"7\">    \n<meta path=\"docs/npm-packages\">\n\n## Install Express from npm\n\n```js\n// Name: Express Example\n\nimport \"@johnlindquist/kit\"\n\nlet express = await npm(\"express\")\nlet detect = await npm(\"detect-port\")\n\nlet app = express()\n\napp.get(\"/\", (req, res) => {\n  res.send(`Hello Script Kit!`)\n})\n\nlet port = await detect()\napp.listen(port)\n\nawait hide() // in case the terminal is open from installing packages\n\nawait browse(`http://localhost:${port}`)\n```\n\n[Open express-example in Script Kit](https://scriptkit.com/api/new?name=express-example&url=https://gist.githubusercontent.com/johnlindquist/52c9ab749f8483a15ccbd28631db2df1/raw/e8bc1e1dec05fd17e36cafbf21ada409b91a6fa9/express-example.js\")\n\n> You can terminate a long-running process like above from the menubar dropdown menu or by pressing `cmd+p` from the Script Kit window to list running processes.\n","extension":".md","dir":"docs","file":"npm-packages","description":"","tag":"","section":"Essentials","i":"7","sectionIndex":"1","createdAt":"2022-06-30T02:17:17Z"},{"name":"Select a Path","note":"Dropping one or more files returns an array of file information","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/809","url":"https://gist.githubusercontent.com/johnlindquist/68ae880d76f6d92b1aa9994501465f2b/raw/839a08ef025a07e5d5e292c8730d7c631b934798/select-a-path.js","title":"Select a Path","command":"select-a-path","content":"<meta sectionIndex=\"1\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/809\">\n<meta id=\"D_kwDOEu7MBc4AP9Tf\">\n<meta title=\"Select a Path\">\n<meta section=\"Essentials\">\n<meta i=\"2\">    \n<meta path=\"docs/select-a-path\">\n\n## Select a Path\n\n```js\n// Name: Select a Path\n\nimport \"@johnlindquist/kit\"\n\nlet filePath = await path()\n\nawait div(md(`You selected ${filePath}`))\n```\n\n[Open select-a-path in Script Kit](https://scriptkit.com/api/new?name=select-a-path&url=https://gist.githubusercontent.com/johnlindquist/68ae880d76f6d92b1aa9994501465f2b/raw/839a08ef025a07e5d5e292c8730d7c631b934798/select-a-path.js\")\n\n## Select a Path with Options\n\n```js\n// Name: Select a Path with Options\n\nimport \"@johnlindquist/kit\"\n\nawait path({\n  hint: `Select a path containing JS files`,\n  onlyDirs: true,\n  onChoiceFocus: async (input, { focused }) => {\n    let focusedPath = focused.value\n    try {\n      let files = await readdir(focusedPath)\n      let hasJS = files.find(f => f.endsWith(\".js\"))\n\n      setPreview(\n        md(\n          `${\n            hasJS ? \"✅ Found\" : \"🔴 Didn't find\"\n          } JS files`\n        )\n      )\n    } catch (error) {\n      log(error)\n    }\n  },\n})\n```\n\n[Open select-a-path-with-options in Script Kit](https://scriptkit.com/api/new?name=select-a-path-with-options&url=https://gist.githubusercontent.com/johnlindquist/8ec7f7178cd44481aed4e968fd83da3f/raw/c8a4d8deacaa192f07fbdfed7c17a75558bc99a7/select-a-path-with-options.js\")\n\n## Drag and Drop\n\n```js\n// Name: Drop Example\n\nimport \"@johnlindquist/kit\"\n\n// Note: Dropping one or more files returns an array of file information\n// Dropping text or an image from the browser returns a string\nlet fileInfos = await drop()\n\nlet filePaths = fileInfos.map(f => f.path).join(\",\")\n\nawait div(md(filePaths))\n```\n\n[Open drop-example in Script Kit](https://scriptkit.com/api/new?name=drop-example&url=https://gist.githubusercontent.com/johnlindquist/f7937ef8b3d5827b5aaa17b59dc4e223/raw/183d7cdd3c3e687cdd4fd6fd833abd957e57d3de/drop-example.js\")\n\n## Select from Finder Prompts\n\n```js\n// Name: Select from Finder Prompt\n\nimport \"@johnlindquist/kit\"\n\nlet filePath = await selectFile()\n\nlet folderPath = await selectFolder()\n\nawait div(md(`You selected ${filePath} and ${folderPath}`))\n```\n\n[Open select-from-finder-prompt in Script Kit](https://scriptkit.com/api/new?name=select-from-finder-prompt&url=https://gist.githubusercontent.com/johnlindquist/d27e5970cb6284bd28b746eaeb49df78/raw/5f4b446f2b5a61435a651e0132e878fae9a4f819/select-from-finder-prompt.js\")\n","extension":".md","dir":"docs","file":"select-a-path","description":"","tag":"","section":"Essentials","i":"2","sectionIndex":"1","createdAt":"2022-06-30T02:17:14Z"},{"name":"Stand Up and Stretch","schedule":"*/15 * * * *","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/806","url":"","title":"Run a Script on a Schedule","command":"run-a-script-on-a-schedule","content":"<meta sectionIndex=\"2\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/806\">\n<meta id=\"D_kwDOEu7MBc4AP9Tc\">\n<meta title=\"Run a Script on a Schedule\">\n<meta section=\"Script Metadata\">\n<meta i=\"1\">    \n<meta path=\"docs/run-a-script-on-a-schedule\">\n\n## Run a Script on a Schedule\n\nUse cron syntax to run scripts on a schedule. The following example will show a notification to stand up and stretch every 15 minutes.\n\n```js\n// Name: Stand Up and Stretch\n// Schedule: */15 * * * *\n\nimport \"@johnlindquist/kit\"\n\nnotify(`Stand up and stretch`)\n```\n\n[Open stand-up-and-stretch in Script Kit](https://scriptkit.com/api/new?name=stand-up-and-stretch&url=https://gist.githubusercontent.com/johnlindquist/4a857741902927cc97e10db7a43b497d/raw/e01f61d697941fe0f0e90d51d5eb35f81b214be7/stand-up-and-stretch.ts\")\n\n[Crontab.guru](https://crontab.guru/) is a great utility to help generate and understand cron syntax.\n","extension":".md","dir":"docs","file":"run-a-script-on-a-schedule","description":"","tag":"","section":"Script Metadata","i":"1","sectionIndex":"2","createdAt":"2022-06-30T02:17:13Z"},{"name":"Read Files","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/805","url":"https://gist.githubusercontent.com/johnlindquist/00093125f3735bed8062dce0e20af4f8/raw/faec10fc8f99cc0744e9e840cfadb6cbe88e3a32/read-files.js","title":"Read Files","command":"read-files","content":"<meta sectionIndex=\"3\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/805\">\n<meta id=\"D_kwDOEu7MBc4AP9Tb\">\n<meta title=\"Read Files\">\n<meta section=\"Files and Data\">\n<meta i=\"0\">    \n<meta path=\"docs/read-files\">\n\n## Read Files\n\n```js\n// Name: Read Files\n\nimport \"@johnlindquist/kit\"\n\nlet pkg = await readFile(\n  home(\".kenv\", \"package.json\"),\n  \"utf-8\"\n)\n\nawait editor({\n  value: pkg,\n  language: \"json\",\n})\n```\n\n[Open read-files in Script Kit](https://scriptkit.com/api/new?name=read-files&url=https://gist.githubusercontent.com/johnlindquist/00093125f3735bed8062dce0e20af4f8/raw/faec10fc8f99cc0744e9e840cfadb6cbe88e3a32/read-files.js\")\n","extension":".md","dir":"docs","file":"read-files","description":"","tag":"","section":"Files and Data","i":"0","sectionIndex":"3","createdAt":"2022-06-30T02:17:12Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/803","url":"","title":"Share Scripts","command":"share-scripts","content":"<meta sectionIndex=\"1\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/803\">\n<meta id=\"D_kwDOEu7MBc4AP9TZ\">\n<meta title=\"Share Scripts\">\n<meta section=\"Essentials\">\n<meta i=\"8\">    \n<meta path=\"docs/share-scripts\">\n\n## Get Featured\n\nFeatured scripts are displayed in:\n\n- The `hot` tab of the Script Kit main window\n- On the [Community Scripts](https://www.scriptkit.com/scripts) page\n\nTo get featured, post your script to the [Script Kit Github discussions Share page](https://github.com/johnlindquist/kit/discussions/categories/share). With a script focused in the Script Kit main window, you can press right or <kbd>cmd+k</kbd> to bring up a share menu which will automatically walk you through creating a shareable post for the script.\n\nAs a shortcut, hit <kbd>cmd+s</kbd> with a script selected to automatically run the \"Share as Discussion\" process.\n\n## Share as a Gist, Link, URL, or Markdown\n\nThe Script Kit main window also includes many other share options:\n\n- Share as Gist <kbd>cmd+g</kbd>: Creates as Gist of the selected script, then copies the URL to the clipboard\n- Share as Link <kbd>opt+s</kbd>: Creates a private installable kit://link to the selected script, then copies the URL to the clipboard. These links are very long as they encode the entire script into the URL.\n- Share as URL <kbd>opt+u</kbd>: Creates a Gist of the selected script, then copies an installable public URL to the clipboard\n- Share as Markdown <kbd>cmd+m</kbd>: Copies the selected script as a Markdown snippet to the clipboard\n","extension":".md","dir":"docs","file":"share-scripts","description":"","tag":"","section":"Essentials","i":"8","sectionIndex":"1","createdAt":"2022-06-30T02:17:11Z"},{"name":"Env Example","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/802","url":"https://gist.githubusercontent.com/johnlindquist/84068b5eb52a366b0746aff3f984f3dd/raw/c22f3160535158d2d38952b4a7ee22a105d9359f/env-example.js","title":"Environment Variables","command":"environment-variables","content":"<meta sectionIndex=\"1\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/802\">\n<meta id=\"D_kwDOEu7MBc4AP9TY\">\n<meta title=\"Environment Variables\">\n<meta section=\"Essentials\">\n<meta i=\"5\">    \n<meta path=\"docs/environment-variables\">\n\n## Read and Write from ~/.kenv/.env\n\nThe `env` helper will read environment variables from ~/.kenv/.env. If the variable doesn't exist, it will prompt you to create it.\n\n```js\n// Name: Env Example\n\nimport \"@johnlindquist/kit\"\n\nlet KEY = await env(\"MY_KEY\")\n\nawait div(md(`You loaded ${KEY} from ~/.kenv/.env`))\n```\n\n[Open env-example in Script Kit](https://scriptkit.com/api/new?name=env-example&url=https://gist.githubusercontent.com/johnlindquist/84068b5eb52a366b0746aff3f984f3dd/raw/c22f3160535158d2d38952b4a7ee22a105d9359f/env-example.js\")\n\n## Choose an Environment Variable\n\nIf you pass a function as the second argument to `env`, it will only be called if the variable doesn't exist.\nThis allows you to set Enviroment Variables from a list, an API, or any other data source.\n\n```js\n// Name: Choose an Environment Variable\n\nimport \"@johnlindquist/kit\"\n\nlet MY_API_USER = await env(\"MY_API_USER\", async () => {\n  return await arg(\"Select a user for your API\", [\n    \"John\",\n    \"Mindy\",\n    \"Joy\",\n  ])\n})\n\nawait div(\n  md(\n    `You selected ${MY_API_USER}. Running this script again will remember your choice`\n  )\n)\n```\n\n[Open choose-an-environment-variable in Script Kit](https://scriptkit.com/api/new?name=choose-an-environment-variable&url=https://gist.githubusercontent.com/johnlindquist/cbc1029ea6abcdb8658cc3919b05875c/raw/cc8ca92d9edc57e16e4fcf2978e5560c6c73ab71/choose-an-environment-variable.js\")\n","extension":".md","dir":"docs","file":"environment-variables","description":"","tag":"","section":"Essentials","i":"5","sectionIndex":"1","createdAt":"2022-06-30T02:17:10Z"},{"name":"Download a File","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/800","url":"https://gist.githubusercontent.com/johnlindquist/b10dbc2218d7c229fd4ed9865739b46f/raw/b9108056d761cdf6b1e8ec5c7d218d11f4002e56/download-a-file.js","title":"Download Files","command":"download-files","content":"<meta sectionIndex=\"3\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/800\">\n<meta id=\"D_kwDOEu7MBc4AP9TW\">\n<meta title=\"Download Files\">\n<meta section=\"Files and Data\">\n<meta i=\"2\">    \n<meta path=\"docs/download-files\">\n\n## Download a Single File\n\n```js\n// Name: Download a File\n\nimport \"@johnlindquist/kit\"\n\nlet url = \"https://www.scriptkit.com/assets/logo.png\"\nlet buffer = await download(url)\n\nlet fileName = path.basename(url)\nlet filePath = home(fileName)\n\nawait writeFile(filePath, buffer)\n```\n\n[Open download-a-file in Script Kit](https://scriptkit.com/api/new?name=download-a-file&url=https://gist.githubusercontent.com/johnlindquist/b10dbc2218d7c229fd4ed9865739b46f/raw/b9108056d761cdf6b1e8ec5c7d218d11f4002e56/download-a-file.js\")\n","extension":".md","dir":"docs","file":"download-files","description":"","tag":"","section":"Files and Data","i":"2","sectionIndex":"3","createdAt":"2022-06-30T02:17:09Z"},{"name":"Create a Text File","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/796","url":"https://gist.githubusercontent.com/johnlindquist/24794c9b9bfce36ff898d34019555012/raw/c222c46aefd322ae50c9f5fc9e70ba0d2ef74d26/create-a-text-file.js","title":"Create Files","command":"create-files","content":"<meta sectionIndex=\"3\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/796\">\n<meta id=\"D_kwDOEu7MBc4AP9TS\">\n<meta title=\"Create Files\">\n<meta section=\"Files and Data\">\n<meta i=\"1\">    \n<meta path=\"docs/create-files\">\n\n## Create a Text File\n\n```js\n// Name: Create a Text File\n\nimport \"@johnlindquist/kit\"\n\nlet filePath = await path() // Select a path that doesn't exist\n\nlet exists = await pathExists(filePath)\n\nif (!exists) {\n  await writeFile(filePath, \"Hello world\")\n} else {\n  await div(md(`${filePath} already exists...`))\n}\n```\n\n[Open create-a-text-file in Script Kit](https://scriptkit.com/api/new?name=create-a-text-file&url=https://gist.githubusercontent.com/johnlindquist/24794c9b9bfce36ff898d34019555012/raw/c222c46aefd322ae50c9f5fc9e70ba0d2ef74d26/create-a-text-file.js\")\n\n## Update a Text File\n\n```js\n// Name: Update a Text File\n\nimport \"@johnlindquist/kit\"\n\nlet filePath = home(`my-notes.md`)\n\n// `ensureReadFile` will create the file with the content\n// if it doesn't exist\nlet content = await ensureReadFile(filePath, \"Hello world\")\n\nawait editor({\n  value: content,\n  onInput: _.debounce(async input => {\n    await writeFile(filePath, input)\n  }, 200),\n})\n```\n\n[Open update-a-text-file in Script Kit](https://scriptkit.com/api/new?name=update-a-text-file&url=https://gist.githubusercontent.com/johnlindquist/b9aa415d3870b8760c54ca57ccabd77d/raw/d3a4645c645dfb0d1749f1719aee817f723357fc/update-a-text-file.js\")\n","extension":".md","dir":"docs","file":"create-files","description":"","tag":"","section":"Files and Data","i":"1","sectionIndex":"3","createdAt":"2022-06-30T02:17:06Z"},{"name":"Editor Example","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/794","url":"https://gist.githubusercontent.com/johnlindquist/3be99f494f84cea0b21aa673740c0e2e/raw/64757d3981befaf3ef7b3a0eceadab240cd8c2e2/editor-example.js","title":"Built-in Editor","command":"built-in-editor","content":"<meta sectionIndex=\"1\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/794\">\n<meta id=\"D_kwDOEu7MBc4AP9TQ\">\n<meta title=\"Built-in Editor\">\n<meta section=\"Essentials\">\n<meta i=\"3\">    \n<meta path=\"docs/built-in-editor\">\n\n## Built-in Editor\n\n```js\n// Name: Editor Example\n\nimport \"@johnlindquist/kit\"\n\nlet result = await editor({\n  footer: `Hit cmd+s to continue...`,\n})\n\nawait div(md(result))\n```\n\n[Open editor-example in Script Kit](https://scriptkit.com/api/new?name=editor-example&url=https://gist.githubusercontent.com/johnlindquist/3be99f494f84cea0b21aa673740c0e2e/raw/64757d3981befaf3ef7b3a0eceadab240cd8c2e2/editor-example.js\")\n\n## Load Text in the Editor\n\n```js\n// Name: Load Text Into the Editor\n\nimport \"@johnlindquist/kit\"\n\nlet { data } = await get(\n  `https://raw.githubusercontent.com/johnlindquist/kit/main/README.md`\n)\n\nlet result = await editor({\n  value: data,\n  // Supports \"css\", \"js\", \"ts\", and \"md\". \"md\" is default. More language support coming in future releases.\n  language: \"md\",\n  footer: `Hit cmd+s to continue...`,\n})\n\nawait div(md(result))\n```\n\n[Open load-text-into-the-editor in Script Kit](https://scriptkit.com/api/new?name=load-text-into-the-editor&url=https://gist.githubusercontent.com/johnlindquist/69efafa66f1c6aa436b8f8283cc1fbba/raw/7f371e045609d3dbee92999b09eac4839262fc9f/load-text-into-the-editor.js\")\n","extension":".md","dir":"docs","file":"built-in-editor","description":"","tag":"","section":"Essentials","i":"3","sectionIndex":"1","createdAt":"2022-06-30T02:17:05Z"},{"shortcut":"cmd shift j","shortcode":"oi","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/792","url":"","title":"Add a Keyboard Shortcut","command":"add-a-keyboard-shortcut","content":"<meta sectionIndex=\"2\">\n<meta url=\"https://github.com/johnlindquist/kit/discussions/792\">\n<meta id=\"D_kwDOEu7MBc4AP9TO\">\n<meta title=\"Add a Keyboard Shortcut\">\n<meta section=\"Script Metadata\">\n<meta i=\"0\">    \n<meta path=\"docs/add-a-keyboard-shortcut\">\n\n## // Shortcut Metadata\n\nUse the `// Shortcut` metadata to add a global keyboard shortcut to any script\n\n```js\n// Shortcut: cmd shift j\n\nimport \"@johnlindquist/kit\"\n\nsay(`You pressed command shift j`)\n```\n\n```js\n// Shortcut: opt i\n\nimport \"@johnlindquist/kit\"\n\nsay(`You pressed option i`)\n```\n\n## // Shortcode Metadata\n\nA shortcode allows you quickly run a script without needing to search for it.\n\nTo trigger a `// Shortcode`, type the string of characters from the main menu, then hit `spacebar`. In this example, you would type `oi` then `spacebar` to run this script:\n\n```js\n// Shortcode: oi\n\nimport \"@johnlindquist/kit\"\n\nsay(`You pressed option i`)\n```\n\n## Quick Submit from Hint\n\nA common pattern from Terminal is to quickly submit a script from a hint. Using a bracket around a single character will submit that character when pressed.\n\n```js\nimport \"@johnlindquist/kit\"\n\nlet value = await arg({\n  placeholder: \"Continue?\",\n  hint: `Another [y]/[n]`,\n})\n\nif (value === \"y\") {\n  say(`You pressed y`)\n} else {\n  say(`You pressed n`)\n}\n```\n\n## Quick Submit from Choice\n\nIf you need to provide a little more information to the user, use a choice instead of a hint. This allows you to provide a full value that will be submitted instead of just the single letter.\n\n```js\nimport \"@johnlindquist/kit\"\n\nlet value = await arg(\"Select a food\", [\n  {\n    name: \"[a]pple\",\n    value: \"apple\",\n  },\n  {\n    name: \"[b]anana\",\n    value: \"banana\",\n  },\n  {\n    name: \"[c]heese\",\n    value: \"cheese\",\n  },\n])\n\nawait div(md(value))\n```\n","extension":".md","dir":"docs","file":"add-a-keyboard-shortcut","description":"","tag":"","section":"Script Metadata","i":"0","sectionIndex":"2","createdAt":"2022-06-30T02:17:04Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/785","url":"","title":"Accessibility Permissions for Snippets, Keyboard Actions, and Clipboard History","command":"accessibility-permissions-for-snippets-keyboard-actions-and-clipboard-history","content":"Kit.app requires permission for the following reasons:\r\n* Watch user input to trigger Snippets and Clipboard History\r\n* Send keystrokes to trigger for `setSelectedText`, `getSelectedText`, `keyboard.type` and others\r\n* In the future, recording Macros, mouse actions, and more\r\n\r\n❗️ **You must quit Kit.app and re-open it for changes to take effect.** \r\n\r\n![CleanShot 2022-06-20 at 14 27 00](https://user-images.githubusercontent.com/36073/174673600-59020e49-be04-4786-81f7-5bbe20a9ce6c.png)\r\n","extension":".md","dir":"","file":"","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2022-06-20T20:30:58Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/624","url":"","title":"Submit From Live Data","command":"submit-from-live-data","content":"<meta path=\"help/submit-from-live-data\">\r\n<meta description=\"Use Then to Allow setInterval\">\r\n\r\nSome scenarios require `setInterval` or other \"live data\" utils. This means you can't use `await` on the arg/div/textarea/etc because `await` prevents the script from continuing on to start the `setInterval`.\r\n\r\n![CleanShot 2021-11-28 at 08 58 04](https://user-images.githubusercontent.com/36073/143775792-34c1fb15-21b9-4690-b8e2-23e1447f65e5.gif)\r\n\r\nUse the Promise `then` on arg/div/textarea/etc to allow the script to continue to run to the `setInterval`. Inside of the `then` callback, you will have to clear the interval for your script to continue/complete:\r\n\r\n```js\r\nlet intervalId = 0\r\ndiv(md(`Click a value`)).then(async value => {\r\n  clearInterval(intervalId)\r\n\r\n  await div(md(value))\r\n})\r\n\r\nintervalId = setInterval(() => {\r\n  let value = Math.random()\r\n\r\n  setPanel(\r\n    md(`\r\n  [${value}](submit:${value})\r\n  `)\r\n  )\r\n}, 1000)\r\n```\r\n\r\n","extension":".md","dir":"help","file":"submit-from-live-data","description":"Use Then to Allow setInterval","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-28T16:01:58Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/620","url":"","title":"New Kit Environment (Kenv)","command":"new-kit-environment-kenv","content":"<meta path=\"new/kenv-create\">\r\n\r\n# New Kit Environment\r\n\r\nThis command will create a new directory in `~/.kenv/kenvs` that contains a `scripts` directory as a place to keep scripts separate from your main Kit environment. This is usually done when you want to share scripts with the community/your team or organize them by type (scripts for GitHub, scripts for Google, etc).\r\n\r\n## Limitations\r\n\r\nScripts inside of `kenvs` do not support metadata that allow scripts to run automatically:\r\n\r\n- Schedule\r\n- Watch\r\n- Background\r\n- System\r\n\r\nIf you need to run one of these automatically, move/duplicate it to your main Kit Environment. You can do this from the main scripts menu by pressing <kbd>cmd+k</kbd> to see the script options.","extension":".md","dir":"new","file":"kenv-create","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-26T14:40:33Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/616","url":"","title":"Strict Mode","command":"strict-mode","content":"<meta path=\"help/strict-mode\">\r\n<meta description=\"Allow user to input text when list is filtered\">\r\n\r\n# Strict Mode\r\n\r\n`strict` is enabled by default and it forces the user to pick an item from the list, preventing them from entering their own text.\r\n\r\nWhen you disabled `strict`, if you type something that eliminates the entire list, then hit <kbd>Enter</kbd>, the string from the input will be passed back.\r\n\r\n> Note: If the list values are Objects and the user inputs a String, you will need to handle either type being returned\r\n\r\n```js\r\n// If the list is completely filtered, hitting enter does nothing.\r\nlet fruit = await arg(`You can only pick one`, [\r\n  `Apple`,\r\n  `Banana`,\r\n  `Orange`,\r\n])\r\n\r\n// If the list is completely filtered, hitting enter sends whatever\r\n// is currently in the input.\r\nlet fruitOrInput = await arg(\r\n  {\r\n    placeholder: `Pick a fruit or type anything`,\r\n    strict: false,\r\n  },\r\n  [`Apple`, `Banana`, `Orange`]\r\n)\r\n\r\nawait textarea(`${fruit} and ${fruitOrInput}`)\r\n```","extension":".md","dir":"help","file":"strict-mode","description":"Allow user to input text when list is filtered","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-22T23:16:24Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/605","url":"","title":"Download Latest Docs","command":"download-latest-docs","content":"<meta path=\"help/download-docs\">\r\n<meta description=\"Grab the latest version of the docs.json\">\r\n\r\n# Download Latest Docs\r\n\r\nHit <kbd>Enter</kbd> to grab the latest docs.json from scriptkit.com. Docs will automatically refresh when you re-open the Docs tab.\r\n\r\n## Docs Constantly Updated\r\n\r\nThe docs are generated from GitHub discussions (just like this one). When I update a GitHub discussion in the \"Docs\" category, discussion triggers a webhook that builds a new docs.json file that can be downloaded by the Kit.app.","extension":".md","dir":"help","file":"download-docs","description":"Grab the latest version of the docs.json","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-19T23:27:31Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/604","url":"","title":"Create Scripts from Docs","command":"create-scripts-from-docs","content":"<meta path=\"new/docs\">\r\n\r\n# Helpful Snippets in Docs\r\n\r\nThe [Docs](submit:docs) tab contains many helpful snippets to help you start your scripts. You can click on the links above the snippets to create the script just like the one below:\r\n\r\n```js\r\nlet value = await arg(\"Hello world!\")\r\nawait div(`${value} 🌎`, `p-5 text-5xl flex justify-center items-center`)\r\n```","extension":".md","dir":"new","file":"docs","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-19T23:19:12Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/603","url":"","title":"Settings","command":"settings","content":"<meta path=\"kit/settings\">\r\n\r\n# Settings\r\n\r\nHit <kbd>Enter</kbd> to modify Kit.app settings:\r\n- Toggle the menu bar icon\r\n- Toggle open at login\r\n- Toggle auto-update","extension":".md","dir":"kit","file":"settings","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-19T19:38:33Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/594","url":"","title":"Real-Time Results from Input","command":"real-time-results-from-input","content":"<meta path=\"help/real-time\">\r\n<meta description=\"Update output on every keypress\">\r\n\r\nWhen you pass a function as the second argument of `arg`, you can take the current `input` and return a string. Kit.app will then render the results as HTML. The simplest example looks like this:\r\n\r\n```js\r\nawait arg(\"Start typing\", input => input)\r\n```\r\n\r\nIf you want to make it look a bit nicer, you can wrap the output with some HTML:\r\n\r\n```js\r\nawait arg(\r\n  \"Type something\",\r\n  input =>\r\n    `<div class=\"text-3xl flex justify-center items-center p-5\">\r\n${input || `Waiting for input`}\r\n</div>`\r\n)\r\n```\r\n\r\nGrowing on the example above, here's a Celsius to Fahrenheit converter:\r\n\r\n```js\r\nlet cToF = celsius => {\r\n  return (celsius * 9) / 5 + 32\r\n}\r\n\r\nawait arg(\r\n  \"Enter degress in celsius\",\r\n  input =>\r\n    `<div class=\"text-3xl flex justify-center items-center p-5\">\r\n${input ? cToF(input) + \"f\" : `Waiting for input`}\r\n</div>`\r\n)\r\n```","extension":".md","dir":"help","file":"real-time","description":"Update output on every keypress","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-15T15:54:11Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/589","url":"","title":"Flags for Choices","command":"flags-for-choices","content":"<meta path=\"help/flags\">\r\n<meta description=\"How to add a secondary menu to each choice\">\r\n<meta tag=\"arg\">\r\n\r\n# Flags for Choices\r\n\r\nTo add an options menu to your choices, you must provide a `flags` object.  If one of the keyboard shortcuts are hit, or the user selects the option, then the `flag` global will have the matching key from your flags set to `true`:\r\n\r\n\r\n```js\r\nlet urls = [\r\n  \"https://scriptkit.com\",\r\n  \"https://egghead.io\",\r\n  \"https://johnlindquist.com\",\r\n]\r\n\r\nlet flags = {\r\n  open: {\r\n    name: \"Open\",\r\n    shortcut: \"cmd+o\",\r\n  },\r\n  copy: {\r\n    name: \"Copy\",\r\n    shortcut: \"cmd+c\",\r\n  },\r\n}\r\n\r\nlet url = await arg(\r\n  { placeholder: `Press 'right' to see menu`, flags },\r\n  urls\r\n)\r\n\r\nif (flag?.open) {\r\n  $`open ${url}`\r\n} else if (flag?.copy) {\r\n  copy(url)\r\n} else {\r\n  console.log(url)\r\n}\r\n```\r\n\r\nUsing the same script above, In the terminal, you would pass an open flag like so:\r\n\r\n```bash\r\nmy-sites --open\r\n```","extension":".md","dir":"help","file":"flags","description":"How to add a secondary menu to each choice","tag":"arg","section":"","i":"","sectionIndex":"","createdAt":"2021-11-13T04:46:39Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/588","url":"","title":"Run Scripts from Other Apps","command":"run-scripts-from-other-apps","content":"<meta path=\"help/other-apps\">\r\n\r\n# Run Scripts from Other Apps\r\n\r\nAre you a fan of?\r\n- [Keyboard Maestro](https://www.keyboardmaestro.com/main/)\r\n- [Better Touch Tool](https://folivora.ai/)\r\n- [Karabiner](https://karabiner-elements.pqrs.org/)\r\n- [Raycast](https://www.raycast.com/)\r\n- [Alfred](https://www.alfredapp.com/)\r\n\r\nWe love all these tools! So we made sure the scripts you create in Script Kit can be invoked by them too:\r\n\r\nIf you have a script named `center-app`, then you can paste the following snippet into the \"scripts\" section of any of these tools.\r\n\r\n```bash\r\n~/.kit/kar center-app\r\n```\r\n\r\n`kar` is an executable that takes the script name and sends it to Kit.app to run.\r\n\r\n> It's named `kar` because we're HUGE fans of  [karabiner](https://karabiner-elements.pqrs.org/) and using \"kit kar\" as a transport\r\n> for scripts into the app makes us giggle 😇\r\n\r\nAny arguments you pass to the script will also be sent along. So if you want to run `center-app` with a padding of `50`:\r\n\r\n```bash\r\n~/.kit/kar center-app 50\r\n```","extension":".md","dir":"help","file":"other-apps","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-12T22:26:27Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/586","url":"","title":"Selecting Files","command":"selecting-files","content":"<meta path=\"help/selecting-files\">\r\n<meta description=\"selectFile, selectFolder, drop\">\r\n\r\n# Selecting Files\r\n\r\nYou can get files into your scripts in many different ways.\r\n\r\n## Currently Selected Files\r\n\r\nOne of the most convenient is to just run a script on the currently selected files in Finder:\r\n\r\n```js\r\n// Always returns a string\r\nlet filePath = await getSelectedFile()\r\n// If multiple files selected, split by \"\\n\"\r\nif (filePath.includes(\"\\n\")) {\r\n  let filePaths = filePath.split(\"\\n\")\r\n}\r\n```\r\n\r\n## Prompt for Selection\r\n\r\nOtherwise, you can prompt to select a file:\r\n\r\n```js\r\n// Open the Finder prompt for file selection\r\nlet filePath = await selectFile()\r\n```\r\n\r\n```js\r\n// Open the Finder prompt for folder selection\r\nlet folderPath = await selectFolder()\r\n```\r\n\r\n## Drag and Drop\r\n\r\n```js\r\n\r\n// Kit.app opens a UI where you can drop files/text/links\r\n// Dropping files will result in an Array of files object\r\nlet dropResult = await drop()\r\ndevTools(dropResult)\r\n```\r\n","extension":".md","dir":"help","file":"selecting-files","description":"selectFile, selectFolder, drop","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-12T16:57:09Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/582","url":"","title":"The Read/Edit/Write Loop","command":"the-readeditwrite-loop","content":"<meta path=\"help/read-edit-write\">\r\n\r\nIf want to quickly jot down notes or just edit text files, use the read, edit, write loop:\r\n\r\n```js\r\nlet filePath = tmpPath(\"notes.md\") //tmpPath is a temp dir based on the script name\r\n\r\nlet contents = await ensureReadFile(filePath)\r\n\r\nwhile (true) {\r\n  // `editor` will be paywalled in the future. Use `textarea` if you don't want to support us 😢\r\n  contents = await editor(contents) // hit cmd+s to \"submit\" and continue back in the loop. cmd+w to close.\r\n  await writeFile(filePath, contents)\r\n}\r\n\r\n```","extension":".md","dir":"help","file":"read-edit-write","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-12T04:58:24Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/581","url":"","title":"Spawn and Position a Window","command":"spawn-and-position-a-window","content":"<meta path=\"help/spawn-and-position\">\r\n<meta description=\"show, getActiveScreen\">\r\n\r\n# Spawn and Position a Window\r\n\r\nYou can control the size/position of each `show` window you create, but you'll need some info from the current screen (especially with a multi-monitor setup!) to be able to position the window where you want it:\r\n\r\n```js\r\nlet width = 480\r\nlet height = 320\r\n\r\nlet { workArea } = await getActiveScreen()\r\nlet { x, y, width: workAreaWidth } = workArea\r\n\r\nshow(\r\n  md(`\r\n# I'm in the top right of the current screen!\r\n\r\n<div class=\"flex justify-center text-9xl\">\r\n😘\r\n</div>\r\n`),\r\n  {\r\n    width,\r\n    height,\r\n    x: x + workAreaWidth - width,\r\n    y: y,\r\n  }\r\n)\r\n```","extension":".md","dir":"help","file":"spawn-and-position","description":"show, getActiveScreen","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-12T04:44:55Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/580","url":"","title":"Quickly Clone Project Templates","command":"quickly-clone-project-templates","content":"<meta path=\"help/degit\">\r\n\r\n# Quickly Clone Project Templates\r\n\r\nWe're developers. We clone project templates from github. [degit](https://www.npmjs.com/package/degit) is available on the global scope for exactly this scenario.\r\n\r\n```js\r\nlet projectName = await arg(\"Name your project\")\r\nlet targetDir = home(\"projects\", projectName)\r\n\r\nawait degit(`https://github.com/sveltejs/template`).clone(\r\n  targetDir\r\n)\r\n\r\nedit(targetDir)\r\n```","extension":".md","dir":"help","file":"degit","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-12T04:06:48Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/579","url":"","title":"Downloading Files","command":"downloading-files","content":"<meta path=\"help/downloading-files\">\r\n<meta description=\"download\">\r\n\r\n# Download Files\r\n\r\nThe [download](https://www.npmjs.com/package/download) npm package is exposed globally for you to easily download files:\r\n\r\n```js\r\nlet dest = tmpPath() //tmp path is a path generated based on the script name\r\n\r\nawait download(\r\n  `https://johnlindquist.com/images/logo/john@2x.png`,\r\n  dest\r\n)\r\n\r\n// open the dir in finder to check out your newly downloaded file\r\nawait $`open ${dest}`\r\n```","extension":".md","dir":"help","file":"downloading-files","description":"download","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-12T02:36:14Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/562","url":"","title":"Quick Keys","command":"quick-keys","content":"<meta path=\"help/quick-keys\">\r\n\r\n# Quick Keys\r\n\r\nA quick key allows you to bind a single key to submit a prompt.\r\n\r\nYou can add quick keys inside the \"hint\" if you don't want to bother with choices:\r\n\r\n```js\r\n//Type \"y\" or \"n\"\r\nlet confirm = await arg({\r\n  placeholder: \"Eat a taco?\",\r\n  hint: `[y]es/[n]o`,\r\n})\r\n\r\nconsole.log(confirm) //\"y\" or \"n\"\r\n```\r\n\r\nOtherwise, add the quick keys in the `name` of the choices and it will return the quick key:\r\n\r\n```js\r\n // Type \"a\", \"b\", or \"g\"\r\nlet fruit = await arg(`Pick one`, [\r\n  `An [a]pple`,\r\n  `A [b]anana`,\r\n  `a [g]rape`,\r\n])\r\n\r\nconsole.log(fruit) //\"a\", \"b\", or \"g\"\r\n```\r\n\r\nYou can add a value, then typing the quick key will return the value:\r\n\r\n```js\r\n// Type \"c\" or \"a\"\r\nlet vegetable = await arg(\"Pick a veggie\", [\r\n  { name: \"[C]elery\", value: \"Celery\" },\r\n  { name: \"C[a]rrot\", value: \"Carrot\" },\r\n])\r\n\r\nconsole.log(vegetable) //\"Celery\" or \"Carrot\"\r\n```","extension":".md","dir":"help","file":"quick-keys","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-09T03:10:10Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/555","url":"","title":"Creating Previews","command":"creating-previews","content":"<meta path=\"help/preview\">\r\n<meta description=\"arg, preview\">\r\n\r\n# Creating Previews\r\n\r\nEach choice in an `arg` can have an associated `preview`. Previews gracefully enhance from a string all the way up to multiple async functions that return strings based on choice.\r\n\r\nYou can toggle the preview pane open and closed with <kbd>cmd+P</kbd>\r\n\r\n\r\n```js\r\n// Just a string\r\nawait arg(\r\n  \"Select a fruit\",\r\n  md(`I recommend typing \"Apple\"`) // \"md\" converts strings to HTML\r\n)\r\n```\r\n\r\n```js\r\n// A function, takes typed \"input\", returns string\r\nawait arg(\"Select a fruit\", input =>\r\n  md(`You typed \"${input}\"`)\r\n)\r\n```\r\n\r\n```js\r\n// An async function, takes typed \"input\", returns string\r\n// `hightlight` requires \"async\" takes markdown, applies code highlighting\r\n\r\nawait arg(\r\n  \"Select a fruit\",\r\n  async input =>\r\n    await highlight(` \r\n~~~js\r\nawait arg(\"${input}\")\r\n~~~\r\n  `)\r\n)\r\n```\r\n\r\n```js\r\n// A \"preview\" per choice\r\nawait arg(\"Select a fruit\", [\r\n  { name: \"Apple\", preview: `Apple, yum! 🍎` },\r\n  { name: \"Banana\", preview: `Banana, yum too! 🍌` },\r\n])\r\n```\r\n\r\n```js\r\n// Async \"preview\" per choice\r\nlet preview = async ({ name, input }) =>\r\n  await highlight(`\r\n~~~js\r\n// ${name}\r\nawait arg(\"${input}!\")\r\n~~~\r\n`)\r\n```\r\n\r\n```js\r\n//\"input\" param is required to switch prompt mode from \"filter list\" to \"generate list\"\r\nawait arg(\"Select a fruit\", async input => {\r\n  return [\r\n    { name: `Apple ${input}`, preview },\r\n    { name: `Banana ${input}`, preview },\r\n  ]\r\n})\r\n```\r\n\r\n```js\r\n// Static preview with static choices\r\nawait arg(\r\n  {\r\n    preview: md(`\r\n# Pick a fruit\r\n\r\n\r\n  `),\r\n  },\r\n  [\"Apple\", \"Banana\", \"Orange\"]\r\n)\r\n```\r\n\r\n```js\r\n// Dynamic choices, static preview\r\nawait arg(\r\n  {\r\n    preview: async () =>\r\n      await highlight(`\r\n## This is just information\r\n\r\nUsually to help you make a choice\r\n  \r\nJust type some text to see the choices update\r\n`),\r\n  },\r\n  async input => {\r\n    return Array.from({ length: 10 }).map(\r\n      (_, i) => `${input} ${i}`\r\n    )\r\n  }\r\n)\r\n```","extension":".md","dir":"help","file":"preview","description":"arg, preview","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-06T15:55:41Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/548","url":"","title":"Check for Updates","command":"check-for-updates","content":"<meta path=\"kit/update\">\n      \n# Check for Updates\n\nKit.app will check for updates each time your machine wakes from sleep. But if you heard about an update and just can't wait, trigger this command to grab it.\n","extension":".md","dir":"kit","file":"update","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:37Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/547","url":"","title":"Toggle Tray Icon","command":"toggle-tray-icon","content":"<meta path=\"kit/toggle-tray\">\n      \n# Toggle Tray Icon\n\nToggle if the system tray icon is visible\n","extension":".md","dir":"kit","file":"toggle-tray","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:36Z"},{"system":"unlock-screen","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/546","url":"","title":"View System Event Scripts","command":"view-system-event-scripts","content":"<meta path=\"kit/system-events\">\n      \n# View System Event Scripts\n\nThis menu shows scripts that run on system events.\n\nAdd the `System` metadata to run your script on a system event\n\n```js\n// System: unlock-screen\n```\n\nAvailable events:\n\n- suspend\n- resume\n- on-ac\n- on-battery\n- shutdown\n- lock-screen\n- unlock-screen\n- user-did-become-active\n- user-did-resign-active\n- Read about the available events [here](https://www.electronjs.org/docs/latest/api/power-monitor#events)\n\n> Note: YMMV based on your specific machine setup.\n","extension":".md","dir":"kit","file":"system-events","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:36Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/545","url":"","title":"Sync $PATH from Terminal to Kit.app","command":"sync-dollarpath-from-terminal-to-kitapp","content":"<meta path=\"kit/sync-path-instructions\">\n      \n# Sync $PATH from Terminal to Kit.app\n\nHave a command that's working in your terminal, but doesn't work when you call it with Script Kit?\n\nUse this to sync up your \"PATH\" from your terminal to the \"PATH\" that Script Kit will use.\n\nYou can manually edit a `PATH` value any time in `~/.kenv/.env`\n","extension":".md","dir":"kit","file":"sync-path-instructions","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:35Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/544","url":"","title":"Switch to TypeScript Mode","command":"switch-to-typescript-mode","content":"<meta path=\"kit/switch-to-ts\">\n      \n# Switch to TypeScript Mode\n\nPrefer TypeScript for your scripts? Hit _Enter_!\n","extension":".md","dir":"kit","file":"switch-to-ts","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:34Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/543","url":"","title":"Switch to JavaScript Mode","command":"switch-to-javascript-mode","content":"<meta path=\"kit/switch-to-js\">\n      \n# Switch to JavaScript Mode\n\nPrefer JavaScript for your scripts? Hit _Enter_!\n","extension":".md","dir":"kit","file":"switch-to-js","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:33Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/542","url":"","title":"Prepare Script for Stream Deck","command":"prepare-script-for-stream-deck","content":"<meta path=\"kit/stream-deck\">\n      \n# Prepare Script for Stream Deck\n\nWant to map a script to your Stream Deck buttons? Use this to walk you through the process!\n","extension":".md","dir":"kit","file":"stream-deck","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:33Z"},{"schedule":"*/10 * * * * *","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/541","url":"","title":"View Schedule","command":"view-schedule","content":"<meta path=\"kit/schedule\">\n      \n# View Schedule\n\nList all of the scheduled scripts and see the next time time they'll run.\n\nSchedule a script to run on a cron with the `Schedule` metadata:\n\n```js\n// Schedule: */10 * * * * *\n```\n\nUse [https://crontab.guru/](https://crontab.guru/) to easily generate cron syntax.\n","extension":".md","dir":"kit","file":"schedule","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:32Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/540","url":"","title":"Quit","command":"quit","content":"<meta path=\"kit/quit\">\n      \n# Quit\n\nSee you soon! 👋\n","extension":".md","dir":"kit","file":"quit","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:31Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/539","url":"","title":"Open Script Kit at Login","command":"open-script-kit-at-login","content":"<meta path=\"kit/open-at-login\">\n      \n# Open Script Kit at Login\n\nToggle if Script Kit opens when you log on\n","extension":".md","dir":"kit","file":"open-at-login","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:30Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/538","url":"","title":"Manage npm Packages","command":"manage-npm-packages","content":"<meta path=\"kit/manage-npm\">\n      \n# Manage npm Packages\n\nThis will help you install/uninstall packages from your `~/.kenv/node_modules`\n\n> Note: You can use the `npm` method in your script to prompt the user to auto-install:\n\n```js\nlet express = await npm(\"express\")\n```\n","extension":".md","dir":"kit","file":"manage-npm","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:30Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/537","url":"","title":"Open kit.log","command":"open-kitlog","content":"<meta path=\"kit/kit-log\">\n      \n# Open kit.log\n\nView the Kit.app log at `~/.kit/logs/kit.log`\n","extension":".md","dir":"kit","file":"kit-log","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:29Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/536","url":"","title":"Clear Kit Prompt Cache","command":"clear-kit-prompt-cache","content":"<meta path=\"kit/kit-clear-prompt\">\n      \n# Clear Kit Prompt Cache\n\nEach time you move or resize the prompt around for your scripts, Script Kit will store the position and size. If you want to reset the position of you prompts back to the centered defaults, then run this command.\n","extension":".md","dir":"kit","file":"kit-clear-prompt","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:28Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/535","url":"","title":"Manage Kit Environments","command":"manage-kit-environments","content":"<meta path=\"kit/kenv-manage\">\n      \n# Manage Kit Environments\n\nA \"kenv\" (Kit Environment) is a directory with a `scripts` directory. This is the place to create a kenv to manage scripts for your dev team or projects that expose APIs (GitHub, Vercel, etc). We'll be releasing official Script Kit kenvs in the future to show off some of the best practices. 👍\n\nClone, create new, link, push, pull, remove. This menu allows you to manage any of the kenvs you've added to your machine.\n","extension":".md","dir":"kit","file":"kenv-manage","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:27Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/534","url":"","title":"Credits","command":"credits","content":"<meta path=\"kit/credits\">\n      \n# Credits\n\n## John Lindquist\n\nDevelopment\n\n- [https://johnlindquist.com](https://johnlindquist.com)\n- [@johnlindquist](https://twitter.com/johnlindquist)\n\n## Vojta Holik\n\nDesign\n\n- [https://vojta.io/](https://vojta.io/)\n- [@vjthlk](https://twitter.com/vjthlk)\n\n## Supported By\n\n- [egghead.io](https://egghead.io)\n","extension":".md","dir":"kit","file":"credits","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:27Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/533","url":"","title":"Generate bin Files","command":"generate-bin-files","content":"<meta path=\"kit/create-all-bins\">\n      \n# Generate bin Files\n\nIf you manually manage files in the `scripts` dir (instead of using Kit.app or the `kit` CLI) you may run into the scenarios where you have to re-generate all the `bin` executables. This will do that for you.\n","extension":".md","dir":"kit","file":"create-all-bins","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:26Z"},{"shortcut":"cmd option g","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/532","url":"","title":"Add/Change a Script Shortcut","command":"addchange-a-script-shortcut","content":"<meta path=\"kit/change-shortcut\">\n      \n# Add/Change a Script Shortcut\n\nThis list all the scripts and allows you to add a shortcut to it.\n\nYou can manually add shortcuts to scripts like so:\n\n```js\n// Shortcut: cmd option g\n```\n\nThis menu will manage that for you\n","extension":".md","dir":"kit","file":"change-shortcut","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:25Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/531","url":"","title":"Change Script Kit Shortcut","command":"change-script-kit-shortcut","content":"<meta path=\"kit/change-main-shortcut\">\n      \n# Change Script Kit Shortcut\n\nDon't like `cmd+;`? Change it here!\n","extension":".md","dir":"kit","file":"change-main-shortcut","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:25Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/530","url":"","title":"Change Editor","command":"change-editor","content":"<meta path=\"kit/change-editor\">\n      \n# Change Editor\n\nThis will re-prompt you to pick an editor from your PATH by updating your kenv `.env`.\n\nYou can always manually change the editor that Script Kit uses to open files in `~/.kenv/.env`.\n\nThe following would use `code` (assuming is on the \"PATH\").\n\n```bash\nKIT_EDITOR=code\n```\n\nIf `code` isn't on your PATH, you can add the full path to the editor.\n","extension":".md","dir":"kit","file":"change-editor","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:24Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/529","url":"","title":"Add ~/.kit/bin to $PATH","command":"add-kitbin-to-dollarpath","content":"<meta url=\"https://github.com/johnlindquist/kit/discussions/529\">\r\n<meta id=\"D_kwDOEu7MBc4AN_2Q\">\r\n<meta path=\"kit/add-kit-to-profile\">\r\n      \r\n# Add ~/.kit/bin to $PATH\r\n\r\n> This is similar to VS Code's \"Add `code` to path\"\r\n\r\nYou can run the `kit` CLI from your terminal with\r\n\r\n```bash\r\n~/.kit/bin/kit\r\n```\r\n\r\nbut this option will allow you run the CLI with:\r\n\r\n```bash\r\nkit\r\n```\r\n\r\n> If you're familiar with adding to your `.zshrc`, just add `~/.kit/bin` to your PATH.\r\n\r\nThe `kit` CLI will allow you to run, edit, etc scripts from your terminal.","extension":".md","dir":"kit","file":"add-kit-to-profile","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:23Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/528","url":"","title":"Add ~/.kenv/bin to $PATH","command":"add-kenvbin-to-dollarpath","content":"<meta path=\"kit/add-kenv-to-profile\">\n      \n# Add ~/.kenv/bin to $PATH\n\nEach time you create a script, Script Kit also generates a command based on the name you can run from the terminal.\n\nIf you create a script named `list-downloads`, then Script Kit creates a `~/.kenv/bin/list-downloads` executable.\n\nThen you can run the command like so in the terminal:\n\n```bash\n~/.kenv/bin/list-downloads\n```\n\nThis will walk you through running the command without the full path:\n\n```bash\nlist-downloads\n```\n","extension":".md","dir":"kit","file":"add-kenv-to-profile","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:23Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/527","url":"","title":"User Input","command":"user-input","content":"<meta path=\"help/user-input\">\r\n<meta description=\"arg, drop, hotkey, editor, textarea\">\r\n      \r\n# User Input\r\n\r\nReceive text from a user by adding `arg` to your script:\r\n\r\n```js\r\nlet value = await arg()\r\n```\r\n\r\n`arg` will prompt the user to enter text, wait for the text, then return the value of the text to `value` and continue on with the script.\r\nYou can then use `value` as a string in your script however you want.\r\n\r\nIf you want to tell the user what information the prompt expects, provide a string:\r\n\r\n```js\r\nawait arg(\"Please enter your name\")\r\n```\r\n\r\nIf you want give the user options to select, provide an array as the second argument:\r\n\r\n```js\r\nawait arg(\"Select a fruit:\", [\"apple\", \"banana\", \"grape\"])\r\n```\r\n\r\n## Drag and drop\r\n\r\nPrompt the user to drag and drop a file by using the `drop` method:\r\n\r\n```js\r\nlet filePath = await drop()\r\n```\r\n\r\n## Longer Text\r\n\r\nAllow the user to input multiple lines of text using `textarea`:\r\n\r\n```js\r\nlet text = await textarea()\r\n```\r\n\r\nPre-load the `textarea` with text by passing a string:\r\n\r\n```js\r\nlet pleaseEditMe = `Some text I want to edit`\r\nlet text = await textarea(pleaseEditMe)\r\n```\r\n\r\n## Code Editor\r\n\r\n(💵 In the future, using `editor` will require a paid update)\r\n\r\nLaunch a full code editor using `editor`. This is great\r\n\r\n```js\r\nlet text = await editor()\r\n```\r\n\r\nPre-load the `editor` with text and specify a language for code highlighting/features:\r\n\r\n```js\r\nlet text = `\r\n# My Markdown\r\n\r\n* one\r\n* two\r\n`\r\nlet editedText = await editor(text, \"markdown\")\r\nawait div(md(editedText))\r\n```\r\n\r\n## Keyboard Shortcut\r\n\r\n```js\r\nlet keyData = await hotkey()\r\n```\r\n\r\nIf you were to type `cmd+j`, `keyData` would give you the following response:\r\n\r\n```json\r\n{\r\n  \"key\": \"j\",\r\n  \"command\": true,\r\n  \"shift\": false,\r\n  \"option\": false,\r\n  \"control\": false,\r\n  \"fn\": false,\r\n  \"hyper\": false,\r\n  \"os\": false,\r\n  \"super\": false,\r\n  \"win\": false,\r\n  \"shortcut\": \"command j\"\r\n}\r\n```\r\n","extension":".md","dir":"help","file":"user-input","description":"arg, drop, hotkey, editor, textarea","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:22Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/526","url":"","title":"Run Shell Commands","command":"run-shell-commands","content":"<meta path=\"help/terminal-app\">\n      \n# Run Shell Commands\n\nScript Kit bundles [zx](https://github.com/google/zx) as the global `$`\n\nExample from their docs (make sure to `cd` to the proper dir)\n\n```js\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = \"foo bar\"\nawait $`mkdir /tmp/${name}`\n```\n","extension":".md","dir":"help","file":"terminal-app","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:21Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/525","url":"","title":"Store Data","command":"store-data","content":"<meta path=\"help/store-data\">\n\n# Store Data\n\n## Read/Write to a `.env` file\n\nUse `await env(\"SOME_KEY\")` to check if the value exists in the `~/.kenv/.env` file, if not, prompt the user to enter it and store it for the next time the script is run\n\n```js\nlet value = await env(\"MY_KEY\")\n```\n\n## Read/Write Data to a json file `db`\n\nThe `db` method will create a json file to store values for you in `~/.kenv/db`.\n\n```js\nlet data = await db({ values: [] })\n\nlet value = await arg(\"Type something\")\n\ndata.values.push(value)\nawait data.write()\n```\n","extension":".md","dir":"help","file":"store-data","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:20Z"},{"shortcut":"option+g","shortcode":"g","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/524","url":"","title":"Keyboard Shortcuts","command":"keyboard-shortcuts","content":"<meta path=\"help/shortcuts\">\n      \n# Keyboard Shortcuts\n\n## Global Shortcuts\n\nAdd a global shortcut to any script by adding the `//Shortcut: ` metadata:\n\n```js\n// Shortcut: option+g\n```\n\nIn the `Run` tab, use the script options menu `>` to change a shortcut. (Hit `cmd+k` to toggle to the options menu)\nIn the `Kit` tab, you can run `Change script shortcut` to list all script with shortcuts and change them from there.\n\n## Shortcodes\n\nIf you have a script you run often, you can also use \"shortcodes\" in the app. Add the following to the top of your script:\n\n```js\n// Shortcode: g\n```\n\nNow, when you launch the app, type `g` then hit `space` to run the script.\n\nThe main menu (`Run New Kit Help Hot`) also uses shortcodes, so typing `h` then space will switch to the `Help` tab. Or `n` then space switches to the `New` tab.\n","extension":".md","dir":"help","file":"shortcuts","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:20Z"},{"schedule":"*/10 * * * * *","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/523","url":"","title":"Schedule a Script","command":"schedule-a-script","content":"<meta path=\"help/schedule\">\n      \n# Schedule a Script\n\nUse cron syntax to run scripts on a schedule:\n\n```js\n// Schedule: */10 * * * * *\n```\n\n> Note: these scripts must not include `arg` or they will time out after 10 seconds\n","extension":".md","dir":"help","file":"schedule","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:19Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/522","url":"","title":"Subscribe to the Newsletter","command":"subscribe-to-the-newsletter","content":"<meta path=\"help/join\">\n      \n# Subscribe to the Newsletter\n\n- Featured Scripts\n- Latest Updates\n- Tutorials and lessons\n- Script Kit Tips and Tricks\n- Curated dev news\n","extension":".md","dir":"help","file":"join","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:19Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/521","url":"","title":"Get Help on Github Discussions","command":"get-help-on-github-discussions","content":"<meta path=\"help/get-help\">\n      \n# Get Help on Github Discussions\n\nThe Script Kit community lives on GitHub discussions.\n\nThis is the place to:\n\n- 🥰 &ensp;[Share scripts](https://github.com/johnlindquist/kit/discussions/categories/share)\n- 🙏 &ensp;[Ask questions](https://github.com/johnlindquist/kit/discussions/categories/q-a)\n- 💡 &ensp;[Discuss ideas](https://github.com/johnlindquist/kit/discussions/categories/ideas)\n- 😱 &ensp;[Report errors](https://github.com/johnlindquist/kit/discussions/categories/error)\n\nOr just hit _Enter_ to browse all.\n\n> We'll do our best to respond ASAP!\n","extension":".md","dir":"help","file":"get-help","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:18Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/520","url":"","title":"Reading/Writing Files","command":"readingwriting-files","content":"<meta path=\"help/files\">\n      \n# Reading/Writing Files\n\nMost of the methods from [fs/promises](https://nodejs.org/api/fs.html#promises-api) and [fs-extra](https://www.npmjs.com/package/fs-extra) are globally available\n\n## Create a File\n\n```js\n// \"home\" is a method that wraps `path.resolve` based on your home directory\nlet filePath = home(\"projects\", \"kit\", \"note.txt\")\n// writes a file to the filePath using `fs-extra's` \"outputFile\"\nawait outputFile(filePath, `Drink more water`)\n```\n\n## Select and Edit a File\n\n```js\n// \"selectFile\" uses Finder's file selector\nlet filePath = await selectFile()\nlet contents = await readFile(filePath, \"utf-8\")\n\n// Pass the text contents into the editor to quickly edit a file\nlet result = await editor(contents)\nawait writeFile(filePath, result)\n```\n","extension":".md","dir":"help","file":"files","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:17Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/519","url":"","title":"FAQ","command":"faq","content":"<meta path=\"help/faq\">\n      \n# FAQ\n\n## What is Script Kit?\n\nScript Kit is an open-source dev tool for creating, running, editing, and sharing scripts.\n\nThese scripts can run in the Kit.app, the Terminal, GitHub actions, package.json scripts, webhooks, or pretty much anywhere.\n\n## Community of Scripters?\n\nThe main goal of Script Kit is to build a community of people who love to script away the frictions of their day! 🥰\n\n## What are Kit.app, kit, and kenvs?\n\n- Kit.app - The Kit.app provides a UI for your scripts. The app is \"script-driven\" meaning that every time you launch the app, you're really launching a script. The main menu, even though complex, is a script you could write.\n\n- kit - \"kit\" is the sdk of Script Kit\n\n  - A bundle of JavaScript common libs wrapped by an API to make writing scripts easier (`get`, `download`, `replace`, `outputFile`, etc)\n  - APIs for interacting with your OS (`edit`, `focusTab`, `say`, `notify`, etc)\n  - APIs for interacting with Kit.app and Terminal (`arg`, `env`, etc)\n  - Scripts and utils for app setup, managing kenvs, parsing scripts, etc\n\n- kenvs - Kit Enviroments (AKA \"kenv\") are directories that contain a \"scripts\" directory. If you point \"kit\" at a \"kenv\", kit will parse the scripts and give you tools to simplify running and managing them.\n","extension":".md","dir":"help","file":"faq","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:17Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/518","url":"","title":"Display Data","command":"display-data","content":"<meta path=\"help/display-data\">\r\n<meta description=\"div, show\">\r\n\r\n# Display Data\r\n \r\n## Display HTML\r\n\r\nUse the `div` method to display html.\r\n\r\n```js\r\nawait div(`<h1>Hi</h1>`)\r\n```\r\n\r\n### Add Padding\r\n\r\nThe second argument of `div` allows you to add [tailwind](https://tailwindcss.com/) classes to the container of your html. For example, `p-5` will add a `padding: 1.25rem;` to the container.\r\n\r\n```js\r\nawait div(`<h1>Hi</h1>`, `p-5`)\r\n```\r\n\r\n## Display Markdown\r\n\r\nPass a string of markdown to the `md` method. This will convert the markdown to html which you can then pass to the `div`\r\n\r\n```js\r\nlet html = md(`\r\n# Hi\r\n`)\r\nawait div(html)\r\n```\r\n\r\nIf you want to highlight your markdown, pass the markdown string to the `await highlight()` method:\r\n\r\n```js\r\nlet html = await highlight(`\r\n# Hi\r\n`)\r\nawait div(html)\r\n```\r\n\r\n## Create a New Window\r\n\r\nUse the `show` method to spawn a new, persisting window that is disconnected from the script.\r\n\r\nMuch future work will be put into components/widgets that can run outside of the main app UI, but for now, it simply display any html you send to it:\r\n\r\n```js\r\nshow(`\r\n<div class=\"bg-black text-white h-screen p-5\">\r\n    Hello there!\r\n<div>\r\n\r\n`)\r\n```\r\n","extension":".md","dir":"help","file":"display-data","description":"div, show","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:16Z"},{"author":"John Lindquist","twitter":null,"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","discussion":"https://github.com/johnlindquist/kit/discussions/517","url":"","title":"Take Credit for Your Work","command":"take-credit-for-your-work","content":"<meta path=\"help/credit\">\n      \n# Take Credit for Your Work\n\nAdd the `Author` and `Twitter` metadata to get credited in the UI and on [scriptkit.com](https://scriptkit.com) for your script:\n\n```js\n// Author: John Lindquist\n// Twitter: @johnlindquist\n```\n","extension":".md","dir":"help","file":"credit","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:15Z"},{"author":"John Lindquist","twitter":null,"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","discussion":"https://github.com/johnlindquist/kit/discussions/515","url":"","title":"Creating Scripts","command":"creating-scripts","content":"<meta path=\"new/new\">\r\n      \r\n# Creating Scripts\r\n\r\n## Pro-tips\r\n\r\n1. The fastest way to create a script: Launch the app as per usual, then type the name of a script that doesn't exist:\r\n\r\n```bash\r\nMy New Script\r\n```\r\n\r\nThen hit _Enter_.\r\n\r\n2. You can use TypeScript by opening the `Kit` tab and \"Switch to TypeScript Mode\"\r\n\r\n3. The files in the `~/.kenv/templates` dir will be used when creating new scripts. You can create a template with your personal data filled out `~/.kenv/templates/john.js` then in your `.env`, set `KIT_TEMPLATE=john`\r\n\r\n```js\r\n// Author: John Lindquist\r\n// Twitter: @johnlindquist\r\n```\r\n\r\n## Why the Import?\r\n\r\nThe line is _not_ required, but this comment helps code editors to apply the correct type definition files for autocomplete/code-hinting.\r\n\r\n```js\r\nimport \"@johnlindquist/kit\"\r\n```","extension":".md","dir":"new","file":"new","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:14Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/514","url":"","title":"Create a Script from a Gist","command":"create-a-script-from-a-gist","content":"<meta path=\"new/new-from-url\">\n      \n# Create a Script from a Gist\n\nIn the `Run` tab, with a script selected, hit `cmd+g` (think \"g\" for \"gist\").\n\nThis will create a gist then copy gist's url to the clipboard.\n\nYou can share this url with a friend, then they can copy/paste it into this `New from url` command to quickly grab it.\n","extension":".md","dir":"new","file":"new-from-url","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:13Z"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/513","url":"","title":"Get Featured","command":"get-featured","content":"<meta path=\"new/browse-examples\">\n      \n# Get Featured\n\nSimply share your script to Script Kit's [GitHub Discussions](https://github.com/johnlindquist/kit/discussions/categories/share) in the \"share\" category and it will automatically (after a review period) get added to [scriptkit.com](https://scriptkit.com)\n\nYou'll even have a user page based on your GitHub user name: [scriptkit.com/johnlindquist](https://scriptkit.com/johnlindquist)\n\n## Prep a Script for Discussion\n\nWith a script selected, hit `cmd+s` (think \"s\" for \"share\"). This automatically:\n\n- Creates a gist of your script\n- Creates the install link\n- Copies the script and link to your clipboard\n- Opens the discussions page\n\nSo all you have to do is \"paste\"!\n","extension":".md","dir":"new","file":"browse-examples","description":"","tag":"","section":"","i":"","sectionIndex":"","createdAt":"2021-11-05T17:03:13Z"}]
