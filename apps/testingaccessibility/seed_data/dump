--
-- PostgreSQL database dump
--

-- Dumped from database version 12.10 (Debian 12.10-1.pgdg110+1)
-- Dumped by pg_dump version 12.10 (Debian 12.10-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: hdb_catalog; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA hdb_catalog;


ALTER SCHEMA hdb_catalog OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: gen_hasura_uuid(); Type: FUNCTION; Schema: hdb_catalog; Owner: postgres
--

CREATE FUNCTION hdb_catalog.gen_hasura_uuid() RETURNS uuid
    LANGUAGE sql
    AS $$select gen_random_uuid()$$;


ALTER FUNCTION hdb_catalog.gen_hasura_uuid() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: hdb_action_log; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_action_log (
    id uuid DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    action_name text,
    input_payload jsonb NOT NULL,
    request_headers jsonb NOT NULL,
    session_variables jsonb NOT NULL,
    response_payload jsonb,
    errors jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    response_received_at timestamp with time zone,
    status text NOT NULL,
    CONSTRAINT hdb_action_log_status_check CHECK ((status = ANY (ARRAY['created'::text, 'processing'::text, 'completed'::text, 'error'::text])))
);


ALTER TABLE hdb_catalog.hdb_action_log OWNER TO postgres;

--
-- Name: hdb_cron_event_invocation_logs; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_cron_event_invocation_logs (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    event_id text,
    status integer,
    request json,
    response json,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE hdb_catalog.hdb_cron_event_invocation_logs OWNER TO postgres;

--
-- Name: hdb_cron_events; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_cron_events (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    trigger_name text NOT NULL,
    scheduled_time timestamp with time zone NOT NULL,
    status text DEFAULT 'scheduled'::text NOT NULL,
    tries integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    next_retry_at timestamp with time zone,
    CONSTRAINT valid_status CHECK ((status = ANY (ARRAY['scheduled'::text, 'locked'::text, 'delivered'::text, 'error'::text, 'dead'::text])))
);


ALTER TABLE hdb_catalog.hdb_cron_events OWNER TO postgres;

--
-- Name: hdb_metadata; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_metadata (
    id integer NOT NULL,
    metadata json NOT NULL,
    resource_version integer DEFAULT 1 NOT NULL
);


ALTER TABLE hdb_catalog.hdb_metadata OWNER TO postgres;

--
-- Name: hdb_scheduled_event_invocation_logs; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_scheduled_event_invocation_logs (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    event_id text,
    status integer,
    request json,
    response json,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE hdb_catalog.hdb_scheduled_event_invocation_logs OWNER TO postgres;

--
-- Name: hdb_scheduled_events; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_scheduled_events (
    id text DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    webhook_conf json NOT NULL,
    scheduled_time timestamp with time zone NOT NULL,
    retry_conf json,
    payload json,
    header_conf json,
    status text DEFAULT 'scheduled'::text NOT NULL,
    tries integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    next_retry_at timestamp with time zone,
    comment text,
    CONSTRAINT valid_status CHECK ((status = ANY (ARRAY['scheduled'::text, 'locked'::text, 'delivered'::text, 'error'::text, 'dead'::text])))
);


ALTER TABLE hdb_catalog.hdb_scheduled_events OWNER TO postgres;

--
-- Name: hdb_schema_notifications; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_schema_notifications (
    id integer NOT NULL,
    notification json NOT NULL,
    resource_version integer DEFAULT 1 NOT NULL,
    instance_id uuid NOT NULL,
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT hdb_schema_notifications_id_check CHECK ((id = 1))
);


ALTER TABLE hdb_catalog.hdb_schema_notifications OWNER TO postgres;

--
-- Name: hdb_version; Type: TABLE; Schema: hdb_catalog; Owner: postgres
--

CREATE TABLE hdb_catalog.hdb_version (
    hasura_uuid uuid DEFAULT hdb_catalog.gen_hasura_uuid() NOT NULL,
    version text NOT NULL,
    upgraded_on timestamp with time zone NOT NULL,
    cli_state jsonb DEFAULT '{}'::jsonb NOT NULL,
    console_state jsonb DEFAULT '{}'::jsonb NOT NULL
);


ALTER TABLE hdb_catalog.hdb_version OWNER TO postgres;

--
-- Name: accounts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.accounts (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    type text NOT NULL,
    provider text NOT NULL,
    "providerAccountId" text NOT NULL,
    refresh_token text,
    access_token text,
    expires_at bigint,
    token_type text,
    scope text,
    id_token text,
    session_state text,
    oauth_token_secret text,
    oauth_token text,
    "userId" uuid NOT NULL,
    refresh_token_expires_in integer
);


ALTER TABLE public.accounts OWNER TO postgres;

--
-- Name: coupons; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.coupons (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    code text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    expires_at timestamp with time zone,
    max_uses integer DEFAULT '-1'::integer NOT NULL,
    "default" boolean DEFAULT false NOT NULL,
    merchant_coupon_id uuid,
    status integer DEFAULT 0 NOT NULL,
    used_count integer DEFAULT 0 NOT NULL,
    percentage_discount numeric NOT NULL,
    restricted_to_product_id uuid
);


ALTER TABLE public.coupons OWNER TO postgres;

--
-- Name: merchant_accounts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.merchant_accounts (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    payment_processor_id text NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.merchant_accounts OWNER TO postgres;

--
-- Name: merchant_charges; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.merchant_charges (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    identifier text,
    user_id uuid NOT NULL,
    merchant_account_id uuid NOT NULL,
    merchant_product_id uuid NOT NULL,
    purchase_id uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    price_id uuid NOT NULL,
    merchant_price_id uuid NOT NULL,
    merchant_customer_id uuid
);


ALTER TABLE public.merchant_charges OWNER TO postgres;

--
-- Name: merchant_coupons; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.merchant_coupons (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    identifier text,
    status integer DEFAULT 0 NOT NULL,
    merchant_account_id uuid NOT NULL,
    percentage_discount numeric NOT NULL,
    type text
);


ALTER TABLE public.merchant_coupons OWNER TO postgres;

--
-- Name: merchant_customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.merchant_customers (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    user_id uuid NOT NULL,
    merchant_account_id uuid NOT NULL,
    identifier text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    status integer DEFAULT 0
);


ALTER TABLE public.merchant_customers OWNER TO postgres;

--
-- Name: merchant_prices; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.merchant_prices (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    merchant_account_id uuid NOT NULL,
    price_id uuid NOT NULL,
    merchant_product_id uuid NOT NULL,
    status numeric DEFAULT 0 NOT NULL,
    identifier text,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.merchant_prices OWNER TO postgres;

--
-- Name: merchant_products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.merchant_products (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    merchant_account_id uuid NOT NULL,
    product_id uuid NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    identifier text,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.merchant_products OWNER TO postgres;

--
-- Name: prices; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.prices (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    product_id uuid NOT NULL,
    nickname text,
    status integer DEFAULT 0 NOT NULL,
    unit_amount numeric NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.prices OWNER TO postgres;

--
-- Name: products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    name text,
    key text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    status integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.products OWNER TO postgres;

--
-- Name: purchases; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.purchases (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    user_id uuid,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    ip_address text,
    city text,
    state text,
    country text,
    coupon_id uuid,
    upgraded_from_purchase_id uuid NOT NULL,
    product_id uuid
);


ALTER TABLE public.purchases OWNER TO postgres;

--
-- Name: sessions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sessions (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    "sessionToken" text NOT NULL,
    "userId" uuid NOT NULL,
    expires timestamp with time zone
);


ALTER TABLE public.sessions OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    name text,
    email text,
    "emailVerified" timestamp with time zone,
    image text
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: verification_tokens; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.verification_tokens (
    token text NOT NULL,
    identifier text NOT NULL,
    expires timestamp with time zone
);


ALTER TABLE public.verification_tokens OWNER TO postgres;

--
-- Data for Name: hdb_action_log; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_action_log (id, action_name, input_payload, request_headers, session_variables, response_payload, errors, created_at, response_received_at, status) FROM stdin;
\.


--
-- Data for Name: hdb_cron_event_invocation_logs; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_cron_event_invocation_logs (id, event_id, status, request, response, created_at) FROM stdin;
\.


--
-- Data for Name: hdb_cron_events; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_cron_events (id, trigger_name, scheduled_time, status, tries, created_at, next_retry_at) FROM stdin;
\.


--
-- Data for Name: hdb_metadata; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_metadata (id, metadata, resource_version) FROM stdin;
1	{"sources":[{"kind":"postgres","name":"default","tables":[{"object_relationships":[{"using":{"foreign_key_constraint_on":"userId"},"name":"user"}],"table":{"schema":"public","name":"accounts"}},{"object_relationships":[{"using":{"foreign_key_constraint_on":"merchant_coupon_id"},"name":"merchant_coupon"},{"using":{"foreign_key_constraint_on":"restricted_to_product_id"},"name":"restricted_to_product"}],"table":{"schema":"public","name":"coupons"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"coupon_id","table":{"schema":"public","name":"purchases"}}},"name":"purchases"}]},{"table":{"schema":"public","name":"merchant_accounts"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"merchant_account_id","table":{"schema":"public","name":"merchant_charges"}}},"name":"merchant_charges"},{"using":{"foreign_key_constraint_on":{"column":"merchant_account_id","table":{"schema":"public","name":"merchant_coupons"}}},"name":"merchant_coupons"},{"using":{"foreign_key_constraint_on":{"column":"merchant_account_id","table":{"schema":"public","name":"merchant_customers"}}},"name":"merchant_customers"},{"using":{"foreign_key_constraint_on":{"column":"merchant_account_id","table":{"schema":"public","name":"merchant_prices"}}},"name":"merchant_prices"},{"using":{"foreign_key_constraint_on":{"column":"merchant_account_id","table":{"schema":"public","name":"merchant_products"}}},"name":"merchant_products"}]},{"select_permissions":[{"role":"user","permission":{"columns":["id","identifier","merchant_account_id","price_id","purchase_id","status"],"filter":{"user_id":{"_eq":"X-Hasura-User-Id"}}}}],"object_relationships":[{"using":{"foreign_key_constraint_on":"merchant_account_id"},"name":"merchant_account"},{"using":{"foreign_key_constraint_on":"merchant_customer_id"},"name":"merchant_customer"},{"using":{"foreign_key_constraint_on":"price_id"},"name":"merchant_price"},{"using":{"foreign_key_constraint_on":"merchant_product_id"},"name":"merchant_product"},{"using":{"foreign_key_constraint_on":"merchant_price_id"},"name":"price"},{"using":{"foreign_key_constraint_on":"purchase_id"},"name":"purchase"},{"using":{"foreign_key_constraint_on":"user_id"},"name":"user"}],"table":{"schema":"public","name":"merchant_charges"}},{"object_relationships":[{"using":{"foreign_key_constraint_on":"merchant_account_id"},"name":"merchant_account"}],"table":{"schema":"public","name":"merchant_coupons"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"merchant_coupon_id","table":{"schema":"public","name":"coupons"}}},"name":"coupons"}]},{"object_relationships":[{"using":{"foreign_key_constraint_on":"merchant_account_id"},"name":"merchant_account"},{"using":{"foreign_key_constraint_on":"user_id"},"name":"user"}],"table":{"schema":"public","name":"merchant_customers"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"merchant_customer_id","table":{"schema":"public","name":"merchant_charges"}}},"name":"merchant_charges"}]},{"object_relationships":[{"using":{"foreign_key_constraint_on":"merchant_account_id"},"name":"merchant_account"},{"using":{"foreign_key_constraint_on":"merchant_product_id"},"name":"merchant_product"},{"using":{"foreign_key_constraint_on":"price_id"},"name":"price"}],"table":{"schema":"public","name":"merchant_prices"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"price_id","table":{"schema":"public","name":"merchant_charges"}}},"name":"merchant_charges"}]},{"object_relationships":[{"using":{"foreign_key_constraint_on":"merchant_account_id"},"name":"merchant_account"},{"using":{"foreign_key_constraint_on":"product_id"},"name":"product"}],"table":{"schema":"public","name":"merchant_products"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"merchant_product_id","table":{"schema":"public","name":"merchant_charges"}}},"name":"merchant_charges"},{"using":{"foreign_key_constraint_on":{"column":"merchant_product_id","table":{"schema":"public","name":"merchant_prices"}}},"name":"merchant_prices"}]},{"object_relationships":[{"using":{"foreign_key_constraint_on":"product_id"},"name":"product"}],"table":{"schema":"public","name":"prices"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"merchant_price_id","table":{"schema":"public","name":"merchant_charges"}}},"name":"merchant_charges"},{"using":{"foreign_key_constraint_on":{"column":"price_id","table":{"schema":"public","name":"merchant_prices"}}},"name":"merchant_prices"}]},{"table":{"schema":"public","name":"products"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"restricted_to_product_id","table":{"schema":"public","name":"coupons"}}},"name":"coupons"},{"using":{"foreign_key_constraint_on":{"column":"product_id","table":{"schema":"public","name":"merchant_products"}}},"name":"merchant_products"},{"using":{"foreign_key_constraint_on":{"column":"product_id","table":{"schema":"public","name":"prices"}}},"name":"prices"},{"using":{"foreign_key_constraint_on":{"column":"product_id","table":{"schema":"public","name":"purchases"}}},"name":"purchases"}]},{"select_permissions":[{"role":"user","permission":{"columns":["product_id"],"filter":{"user_id":{"_eq":"X-Hasura-User-Id"}}}}],"object_relationships":[{"using":{"foreign_key_constraint_on":"coupon_id"},"name":"coupon"},{"using":{"foreign_key_constraint_on":"product_id"},"name":"product"},{"using":{"foreign_key_constraint_on":"upgraded_from_purchase_id"},"name":"purchase"},{"using":{"foreign_key_constraint_on":"user_id"},"name":"user"}],"table":{"schema":"public","name":"purchases"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"purchase_id","table":{"schema":"public","name":"merchant_charges"}}},"name":"merchant_charges"},{"using":{"foreign_key_constraint_on":{"column":"upgraded_from_purchase_id","table":{"schema":"public","name":"purchases"}}},"name":"upgraded_purchases"}]},{"object_relationships":[{"using":{"foreign_key_constraint_on":"userId"},"name":"user"}],"table":{"schema":"public","name":"sessions"}},{"table":{"schema":"public","name":"users"},"array_relationships":[{"using":{"foreign_key_constraint_on":{"column":"userId","table":{"schema":"public","name":"accounts"}}},"name":"accounts"},{"using":{"foreign_key_constraint_on":{"column":"user_id","table":{"schema":"public","name":"merchant_charges"}}},"name":"merchant_charges"},{"using":{"foreign_key_constraint_on":{"column":"user_id","table":{"schema":"public","name":"merchant_customers"}}},"name":"merchant_customers"},{"using":{"foreign_key_constraint_on":{"column":"user_id","table":{"schema":"public","name":"purchases"}}},"name":"purchases"},{"using":{"foreign_key_constraint_on":{"column":"userId","table":{"schema":"public","name":"sessions"}}},"name":"sessions"}]},{"table":{"schema":"public","name":"verification_tokens"}}],"configuration":{"connection_info":{"use_prepared_statements":false,"database_url":{"from_env":"PG_DATABASE_URL"},"isolation_level":"read-committed"}}}],"version":3,"api_limits":{"disabled":true}}	169
\.


--
-- Data for Name: hdb_scheduled_event_invocation_logs; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_scheduled_event_invocation_logs (id, event_id, status, request, response, created_at) FROM stdin;
\.


--
-- Data for Name: hdb_scheduled_events; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_scheduled_events (id, webhook_conf, scheduled_time, retry_conf, payload, header_conf, status, tries, created_at, next_retry_at, comment) FROM stdin;
\.


--
-- Data for Name: hdb_schema_notifications; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_schema_notifications (id, notification, resource_version, instance_id, updated_at) FROM stdin;
1	{"metadata":false,"remote_schemas":[],"sources":[]}	169	9486e75f-6f69-4537-a3a0-fc46ae2742e4	2022-03-12 15:53:39.520993+00
\.


--
-- Data for Name: hdb_version; Type: TABLE DATA; Schema: hdb_catalog; Owner: postgres
--

COPY hdb_catalog.hdb_version (hasura_uuid, version, upgraded_on, cli_state, console_state) FROM stdin;
187dc6ec-d2ee-4d3a-bfe7-d5aa57d88246	47	2022-03-12 15:38:39.95922+00	{"settings": {"migration_mode": "true"}, "migrations": {"default": {"1647279035132": false, "1647989383010": false, "1647989704362": false, "1647989738820": false, "1647989992919": false, "1647990491041": false, "1647990695399": false, "1647990805985": false, "1647991040562": false, "1647991202991": false, "1647991336894": false, "1647991380705": false, "1647991751830": false, "1647992476469": false, "1647992489424": false, "1647993033362": false, "1647993076298": false, "1647993088829": false, "1647993128588": false, "1647993136458": false, "1647998265329": false, "1648008752102": false, "1648008770374": false, "1648050318975": false, "1648050335518": false, "1648050443509": false, "1648050539500": false, "1648050589094": false, "1648050678347": false, "1648051209003": false, "1648051228922": false, "1648051245967": false, "1648051316660": false, "1648051801277": false, "1648052210186": false, "1648052602525": false, "1648061039896": false, "1648061061775": false, "1648061069273": false, "1648061166310": false, "1648061230142": false, "1648061758050": false, "1648061774667": false, "1648070789456": false, "1648070903530": false}}, "isStateCopyCompleted": true}	{"console_notifications": {"admin": {"date": null, "read": [], "showBadge": true}}, "telemetryNotificationShown": true, "disablePreReleaseUpdateNotifications": true}
\.


--
-- Data for Name: accounts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.accounts (id, type, provider, "providerAccountId", refresh_token, access_token, expires_at, token_type, scope, id_token, session_state, oauth_token_secret, oauth_token, "userId", refresh_token_expires_in) FROM stdin;
\.


--
-- Data for Name: coupons; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.coupons (id, code, created_at, expires_at, max_uses, "default", merchant_coupon_id, status, used_count, percentage_discount, restricted_to_product_id) FROM stdin;
2c243b77-7267-4eca-83a1-1a88c409b4c7	TEST_100	2022-03-23 18:47:38.47877+00	\N	-1	f	\N	1	0	1	\N
a2171699-cb4c-4334-ba86-7277ef763bf2	TEST_50	2022-03-23 18:47:47.093191+00	\N	-1	f	\N	1	0	0.5000	\N
\.


--
-- Data for Name: merchant_accounts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.merchant_accounts (id, payment_processor_id, status, created_at) FROM stdin;
55338896-3b54-4a78-9971-5c91352fd36c	stripe	1	2022-03-23 01:07:10.739643+00
\.


--
-- Data for Name: merchant_charges; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.merchant_charges (id, status, identifier, user_id, merchant_account_id, merchant_product_id, purchase_id, created_at, price_id, merchant_price_id, merchant_customer_id) FROM stdin;
\.


--
-- Data for Name: merchant_coupons; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.merchant_coupons (id, identifier, status, merchant_account_id, percentage_discount, type) FROM stdin;
3809ce1e-d31f-4d02-b8bb-faa2d521cd0f	zIijBipl	1	55338896-3b54-4a78-9971-5c91352fd36c	0.4500	bulk
d0819403-09db-4f1f-89c5-9625514f92dc	8J5QsIjm	1	55338896-3b54-4a78-9971-5c91352fd36c	0.2500	bulk
99219f33-9ff0-42f4-9cf0-dc8db6f736c1	yZYywWfA	1	55338896-3b54-4a78-9971-5c91352fd36c	0.1000	bulk
8128d956-980a-45bb-b908-08ee589343c6	aSaSbjYm	1	55338896-3b54-4a78-9971-5c91352fd36c	0.3500	bulk
43897b50-3b88-4430-996e-911d8a1e4e6d	d9YItvNo	1	55338896-3b54-4a78-9971-5c91352fd36c	0.1500	bulk
0d4f52f7-5ba8-4f03-8d4e-35f33d31f146	Y3BWsWsF	1	55338896-3b54-4a78-9971-5c91352fd36c	0.0500	bulk
557c9c6d-8e34-4241-90d7-1fa89b88f7cf	jnGQsLrD	1	55338896-3b54-4a78-9971-5c91352fd36c	0.7500	ppp
846ca746-b2ab-43cc-ae66-03416b3588b7	oJvpnPR3	1	55338896-3b54-4a78-9971-5c91352fd36c	0.7000	ppp
244e2728-00ef-4726-aac5-24416a0d5bc3	8N6mD5j1	1	55338896-3b54-4a78-9971-5c91352fd36c	0.6500	ppp
c9381c61-fbfd-4b33-977e-f940d418a218	3F5NtPbi	1	55338896-3b54-4a78-9971-5c91352fd36c	0.6000	ppp
1c3849cf-add0-4c8a-90cf-4ccb86794460	d0zk9jRk	1	55338896-3b54-4a78-9971-5c91352fd36c	0.5500	ppp
a7b777b9-d14c-4ccd-8b78-97abdd115a51	AGXJnSUe	1	55338896-3b54-4a78-9971-5c91352fd36c	0.5000	ppp
bc3cb00b-d0ef-4358-baff-c2a43f278f58	3vKS8oRX	1	55338896-3b54-4a78-9971-5c91352fd36c	0.4500	ppp
5ef41e95-f3b4-4068-b749-c18267824c6d	DYG9H4ma	1	55338896-3b54-4a78-9971-5c91352fd36c	0.4000	ppp
\.


--
-- Data for Name: merchant_customers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.merchant_customers (id, user_id, merchant_account_id, identifier, created_at, status) FROM stdin;
\.


--
-- Data for Name: merchant_prices; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.merchant_prices (id, merchant_account_id, price_id, merchant_product_id, status, identifier, created_at) FROM stdin;
373bd2b6-484d-4308-ba8c-d1d8b0486c76	55338896-3b54-4a78-9971-5c91352fd36c	260dbc0a-69f3-4096-9250-6438224ac7e1	db381251-6d2a-46d1-9653-78879a844b69	1	price_1KgEazGkhzh8cL1JGXoMA493	2022-03-23 01:12:32.693146+00
\.


--
-- Data for Name: merchant_products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.merchant_products (id, merchant_account_id, product_id, status, identifier, created_at) FROM stdin;
db381251-6d2a-46d1-9653-78879a844b69	55338896-3b54-4a78-9971-5c91352fd36c	47dfbe08-e4e1-464c-8a11-f14377f2f149	1	prod_LMyYE3N49PPaoQ	2022-03-23 01:09:32.65458+00
\.


--
-- Data for Name: prices; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.prices (id, product_id, nickname, status, unit_amount, created_at) FROM stdin;
260dbc0a-69f3-4096-9250-6438224ac7e1	47dfbe08-e4e1-464c-8a11-f14377f2f149	\N	1	875.00	2022-03-23 01:10:28.578797+00
\.


--
-- Data for Name: products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.products (id, name, key, created_at, status) FROM stdin;
47dfbe08-e4e1-464c-8a11-f14377f2f149	Professional	\N	2022-03-23 01:08:01.467222+00	1
\.


--
-- Data for Name: purchases; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.purchases (id, user_id, created_at, ip_address, city, state, country, coupon_id, upgraded_from_purchase_id, product_id) FROM stdin;
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.sessions (id, "sessionToken", "userId", expires) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, name, email, "emailVerified", image) FROM stdin;
\.


--
-- Data for Name: verification_tokens; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.verification_tokens (token, identifier, expires) FROM stdin;
\.


--
-- Name: hdb_action_log hdb_action_log_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_action_log
    ADD CONSTRAINT hdb_action_log_pkey PRIMARY KEY (id);


--
-- Name: hdb_cron_event_invocation_logs hdb_cron_event_invocation_logs_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_cron_event_invocation_logs
    ADD CONSTRAINT hdb_cron_event_invocation_logs_pkey PRIMARY KEY (id);


--
-- Name: hdb_cron_events hdb_cron_events_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_cron_events
    ADD CONSTRAINT hdb_cron_events_pkey PRIMARY KEY (id);


--
-- Name: hdb_metadata hdb_metadata_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_metadata
    ADD CONSTRAINT hdb_metadata_pkey PRIMARY KEY (id);


--
-- Name: hdb_metadata hdb_metadata_resource_version_key; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_metadata
    ADD CONSTRAINT hdb_metadata_resource_version_key UNIQUE (resource_version);


--
-- Name: hdb_scheduled_event_invocation_logs hdb_scheduled_event_invocation_logs_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_scheduled_event_invocation_logs
    ADD CONSTRAINT hdb_scheduled_event_invocation_logs_pkey PRIMARY KEY (id);


--
-- Name: hdb_scheduled_events hdb_scheduled_events_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_scheduled_events
    ADD CONSTRAINT hdb_scheduled_events_pkey PRIMARY KEY (id);


--
-- Name: hdb_schema_notifications hdb_schema_notifications_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_schema_notifications
    ADD CONSTRAINT hdb_schema_notifications_pkey PRIMARY KEY (id);


--
-- Name: hdb_version hdb_version_pkey; Type: CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_version
    ADD CONSTRAINT hdb_version_pkey PRIMARY KEY (hasura_uuid);


--
-- Name: accounts accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts
    ADD CONSTRAINT accounts_pkey PRIMARY KEY (id);


--
-- Name: coupons coupons_code_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.coupons
    ADD CONSTRAINT coupons_code_key UNIQUE (code);


--
-- Name: coupons coupons_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.coupons
    ADD CONSTRAINT coupons_pkey PRIMARY KEY (id);


--
-- Name: merchant_accounts merchant_accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_accounts
    ADD CONSTRAINT merchant_accounts_pkey PRIMARY KEY (id);


--
-- Name: merchant_charges merchant_charges_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_pkey PRIMARY KEY (id);


--
-- Name: merchant_coupons merchant_coupons_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_coupons
    ADD CONSTRAINT merchant_coupons_pkey PRIMARY KEY (id);


--
-- Name: merchant_customers merchant_customers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_customers
    ADD CONSTRAINT merchant_customers_pkey PRIMARY KEY (id);


--
-- Name: merchant_prices merchant_prices_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_prices
    ADD CONSTRAINT merchant_prices_pkey PRIMARY KEY (id);


--
-- Name: merchant_products merchant_products_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_products
    ADD CONSTRAINT merchant_products_pkey PRIMARY KEY (id);


--
-- Name: prices prices_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.prices
    ADD CONSTRAINT prices_pkey PRIMARY KEY (id);


--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (id);


--
-- Name: purchases purchases_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purchases
    ADD CONSTRAINT purchases_pkey PRIMARY KEY (id);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_key UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: verification_tokens verification_tokens_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.verification_tokens
    ADD CONSTRAINT verification_tokens_pkey PRIMARY KEY (token);


--
-- Name: hdb_cron_event_invocation_event_id; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE INDEX hdb_cron_event_invocation_event_id ON hdb_catalog.hdb_cron_event_invocation_logs USING btree (event_id);


--
-- Name: hdb_cron_event_status; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE INDEX hdb_cron_event_status ON hdb_catalog.hdb_cron_events USING btree (status);


--
-- Name: hdb_cron_events_unique_scheduled; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE UNIQUE INDEX hdb_cron_events_unique_scheduled ON hdb_catalog.hdb_cron_events USING btree (trigger_name, scheduled_time) WHERE (status = 'scheduled'::text);


--
-- Name: hdb_scheduled_event_status; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE INDEX hdb_scheduled_event_status ON hdb_catalog.hdb_scheduled_events USING btree (status);


--
-- Name: hdb_version_one_row; Type: INDEX; Schema: hdb_catalog; Owner: postgres
--

CREATE UNIQUE INDEX hdb_version_one_row ON hdb_catalog.hdb_version USING btree (((version IS NOT NULL)));


--
-- Name: hdb_cron_event_invocation_logs hdb_cron_event_invocation_logs_event_id_fkey; Type: FK CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_cron_event_invocation_logs
    ADD CONSTRAINT hdb_cron_event_invocation_logs_event_id_fkey FOREIGN KEY (event_id) REFERENCES hdb_catalog.hdb_cron_events(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: hdb_scheduled_event_invocation_logs hdb_scheduled_event_invocation_logs_event_id_fkey; Type: FK CONSTRAINT; Schema: hdb_catalog; Owner: postgres
--

ALTER TABLE ONLY hdb_catalog.hdb_scheduled_event_invocation_logs
    ADD CONSTRAINT hdb_scheduled_event_invocation_logs_event_id_fkey FOREIGN KEY (event_id) REFERENCES hdb_catalog.hdb_scheduled_events(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: accounts accounts_userId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts
    ADD CONSTRAINT "accounts_userId_fkey" FOREIGN KEY ("userId") REFERENCES public.users(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: coupons coupons_merchant_coupon_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.coupons
    ADD CONSTRAINT coupons_merchant_coupon_id_fkey FOREIGN KEY (merchant_coupon_id) REFERENCES public.merchant_coupons(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: coupons coupons_restricted_to_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.coupons
    ADD CONSTRAINT coupons_restricted_to_product_id_fkey FOREIGN KEY (restricted_to_product_id) REFERENCES public.products(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_charges merchant_charges_merchant_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_merchant_account_id_fkey FOREIGN KEY (merchant_account_id) REFERENCES public.merchant_accounts(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_charges merchant_charges_merchant_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_merchant_customer_id_fkey FOREIGN KEY (merchant_customer_id) REFERENCES public.merchant_customers(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_charges merchant_charges_merchant_price_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_merchant_price_id_fkey FOREIGN KEY (merchant_price_id) REFERENCES public.prices(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_charges merchant_charges_merchant_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_merchant_product_id_fkey FOREIGN KEY (merchant_product_id) REFERENCES public.merchant_products(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_charges merchant_charges_price_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_price_id_fkey FOREIGN KEY (price_id) REFERENCES public.merchant_prices(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_charges merchant_charges_purchase_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_purchase_id_fkey FOREIGN KEY (purchase_id) REFERENCES public.purchases(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_charges merchant_charges_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_charges
    ADD CONSTRAINT merchant_charges_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_coupons merchant_coupons_merchant_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_coupons
    ADD CONSTRAINT merchant_coupons_merchant_account_id_fkey FOREIGN KEY (merchant_account_id) REFERENCES public.merchant_accounts(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_customers merchant_customers_merchant_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_customers
    ADD CONSTRAINT merchant_customers_merchant_account_id_fkey FOREIGN KEY (merchant_account_id) REFERENCES public.merchant_accounts(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_customers merchant_customers_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_customers
    ADD CONSTRAINT merchant_customers_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_prices merchant_prices_merchant_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_prices
    ADD CONSTRAINT merchant_prices_merchant_account_id_fkey FOREIGN KEY (merchant_account_id) REFERENCES public.merchant_accounts(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_prices merchant_prices_merchant_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_prices
    ADD CONSTRAINT merchant_prices_merchant_product_id_fkey FOREIGN KEY (merchant_product_id) REFERENCES public.merchant_products(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_prices merchant_prices_price_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_prices
    ADD CONSTRAINT merchant_prices_price_id_fkey FOREIGN KEY (price_id) REFERENCES public.prices(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_products merchant_products_merchant_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_products
    ADD CONSTRAINT merchant_products_merchant_account_id_fkey FOREIGN KEY (merchant_account_id) REFERENCES public.merchant_accounts(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: merchant_products merchant_products_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.merchant_products
    ADD CONSTRAINT merchant_products_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: prices prices_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.prices
    ADD CONSTRAINT prices_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: purchases purchases_coupon_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purchases
    ADD CONSTRAINT purchases_coupon_id_fkey FOREIGN KEY (coupon_id) REFERENCES public.coupons(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: purchases purchases_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purchases
    ADD CONSTRAINT purchases_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: purchases purchases_upgraded_from_purchase_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purchases
    ADD CONSTRAINT purchases_upgraded_from_purchase_id_fkey FOREIGN KEY (upgraded_from_purchase_id) REFERENCES public.purchases(id) ON UPDATE RESTRICT ON DELETE SET NULL;


--
-- Name: purchases purchases_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.purchases
    ADD CONSTRAINT purchases_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- Name: sessions sessions_userId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT "sessions_userId_fkey" FOREIGN KEY ("userId") REFERENCES public.users(id) ON UPDATE RESTRICT ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

